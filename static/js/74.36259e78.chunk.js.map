{"version":3,"sources":["../../common/formFields/createCP/logisticsCreateCP.formFields.js","forms/CreateCP/logisticsCreateCP.form.js"],"names":["logisticCreateCPFormFields","key","type","FORM_ELEMENT_TYPES","INPUT","kwargs","placeholder","others","formOptions","noStyle","customLabel","disabled","LogisticCreateCPForm","id","onCancel","active","onDone","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","createCPData","submit","a","ADD_CREATE_CP_DATA","useEffect","STOP_STEP_LOADING","handleFieldsChange","useCallback","name","currentInputField","getFieldValue","setFieldsValue","ifNanReturnZero","spinning","orientation","onFinish","initialValues","layout","onFieldsChange","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","justify","htmlType","onClick","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/74.36259e78.chunk.js","sourcesContent":["// min_warehouse = models.FloatField(default=0, blank=True, null=True)\r\n// transportation_w1_c1 = models.FloatField(default=0, blank=True, null=True)\r\n// transportation_c2_w2 = models.FloatField(default=0, blank=True, null=True)\r\n// transportation_w2_w1 = models.FloatField(default=0, blank=True, null=True)\r\n// total_cost_supply_chain = models.FloatField(default=0, blank=True, null=True)\r\n// labor_cost_perton = models.FloatField(default=0, blank=True, null=True)\r\n// repair_reconditioning = models.FloatField(default=0, blank=True, null=True)\r\n// other_cost = models.FloatField(default=0, blank=True, null=True)\r\n// total_cost = models.FloatField(default=0, blank=True, null=True)\r\n//\r\n\r\nimport { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const logisticCreateCPFormFields = [\r\n  {\r\n    key: 'min_warehouse',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    kwargs: {\r\n      placeholder: 'Minimum Warehouse',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },\r\n    customLabel: 'Minimum Warehouse'\r\n  },\r\n  {\r\n    key: 'transportation_w1_c1',\r\n    kwargs: {\r\n      placeholder: 'Transportation W1 C1',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Transportation W1 C1',\r\n  },\r\n  {\r\n    key: 'transportation_c2_w2',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    kwargs: {\r\n      placeholder: 'Transportation C2 W2',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },    customLabel: 'Transportation C2 W2'\r\n  },\r\n  {\r\n    key: 'transportation_w2_w1',\r\n    kwargs: {\r\n      placeholder: 'Transportation W2 W1',\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Transportation W2 W1',\r\n  },\r\n  {\r\n    key: 'total_cost_supply_chain',\r\n    kwargs: {\r\n      placeholder: 'Total Cost Supply Chain',\r\n      disabled: true,\r\n    },\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },    type: FORM_ELEMENT_TYPES.INPUT,\r\n\r\n    customLabel: 'Total Cost Supply Chain',\r\n  },\r\n  {\r\n    key: 'labor_cost_perton',\r\n    kwargs: {\r\n      placeholder: 'Labour Cost Perton',\r\n\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },\r\n    customLabel: 'Labour Cost Perton',\r\n  },\r\n  {\r\n    key: 'repair_reconditioning',\r\n    kwargs: {\r\n      placeholder: 'Repair Reconditioning',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },\r\n    customLabel: 'Repair Reconditioning',\r\n  },\r\n  {\r\n    key: 'other_cost',\r\n    kwargs: {\r\n      placeholder: 'Other Cost',\r\n\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },\r\n    customLabel: 'Other Cost',\r\n  },\r\n  {\r\n    key: 'total_cost',\r\n    kwargs: {\r\n      placeholder: 'Total Cost',\r\n      disabled: true,\r\n\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: {\r\n      formOptions:{ noStyle:true }\r\n\r\n    },\r\n    customLabel: 'Total Cost',\r\n  },\r\n\r\n]\r\n","import React, { useEffect, useState,useCallback } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin } from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_CREATE_CP_DATA, STOP_STEP_LOADING } from 'common/actions';\r\nimport { ArrowRightOutlined } from '@ant-design/icons';\r\nimport { logisticCreateCPFormFields }\r\n  from 'common/formFields/createCP/logisticsCreateCP.formFields';\r\n\r\nimport { ifNanReturnZero } from 'common/helpers/mrHelper';\r\n\r\n\r\nexport const LogisticCreateCPForm = ({ id, onCancel,onDone,active,onNext }) => {\r\n  const [loading,setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.createCPData))\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_CREATE_CP_DATA,data });\r\n    setLoading(false)\r\n    if(active===2){\r\n      onNext();\r\n    }\r\n  }\r\n  useEffect( ()=>{\r\n    if(active!==2){\r\n      form.submit()\r\n      dispatch({ type:STOP_STEP_LOADING })\r\n    }\r\n  },[active])\r\n\r\n\r\n  const handleFieldsChange = useCallback(data => {\r\n\r\n\t\tif(data[0]){\r\n\t\t\tif(data[0].name) {\r\n\r\n        const currentInputField = data[0].name[0];\r\n        console.log(currentInputField);\r\n\r\n\r\n        if (currentInputField===\"min_warehouse\" || currentInputField===\"transportation_w1_c1\" || currentInputField===\"transportation_c2_w2\" || currentInputField===\"transportation_w2_w1\" || currentInputField===\"total_cost_supply_chain\" || currentInputField===\"labor_cost_perton\" || currentInputField===\"repair_reconditioning\" || currentInputField===\"other_cost\" || currentInputField===\"total_cost\") {\r\n          if ( form.getFieldValue(\"min_warehouse\") || form.getFieldValue(\"transportation_w1_c1\") || form.getFieldValue(\"transportation_c2_w2\") || form.getFieldValue(\"transportation_w2_w1\") ) {\r\n            form.setFieldsValue({\r\n              \"total_cost_supply_chain\" : ifNanReturnZero(form.getFieldValue(\"min_warehouse\"))+ifNanReturnZero(form.getFieldValue(\"transportation_w1_c1\"))+ifNanReturnZero(form.getFieldValue(\"transportation_c2_w2\"))+ifNanReturnZero(form.getFieldValue(\"transportation_w2_w1\")),\r\n            })\r\n          } else {\r\n            form.setFieldsValue({\r\n              \"total_cost_supply_chain\" : 0,\r\n            })\r\n          }\r\n\r\n          if ( form.getFieldValue(\"total_cost_supply_chain\") || form.getFieldValue(\"labor_cost_perton\") || form.getFieldValue(\"repair_reconditioning\") || form.getFieldValue(\"other_cost\") ) {\r\n            form.setFieldsValue({\r\n              \"total_cost\" : ifNanReturnZero(form.getFieldValue(\"total_cost_supply_chain\"))+ifNanReturnZero(form.getFieldValue(\"labor_cost_perton\"))+ifNanReturnZero(form.getFieldValue(\"repair_reconditioning\"))+ifNanReturnZero(form.getFieldValue(\"other_cost\")),\r\n            })\r\n          } else {\r\n            form.setFieldsValue({\r\n              \"total_cost\" : 0,\r\n            })\r\n          }\r\n        }\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n  \t},[form,])\r\n\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Divider orientation='left'>Logistic Details</Divider>\r\n      <Form\r\n        onFinish={submit}\r\n        form={form}\r\n        initialValues={\r\n          { ...state }\r\n        }\r\n        layout='vertical'\r\n        onFieldsChange={handleFieldsChange}\r\n        // hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(0, 4).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {item.customLabel}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(0, 4).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(4, 8).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {item.customLabel}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(4, 8).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(8, 9).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {item.customLabel}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {logisticCreateCPFormFields.slice(8, 9).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row justify='space-between'>\r\n          <div className='row'>\r\n            <Button type='primary' htmlType='submit' disabled>\r\n              Submit\r\n            </Button>\r\n            <div className='p-2' />\r\n            <Button type='primary' onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type='link' htmlType='submit'>\r\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default LogisticCreateCPForm;\r\n\r\n"],"sourceRoot":""}