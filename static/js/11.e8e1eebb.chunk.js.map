{"version":3,"sources":["../../common/helpers/api.js","../../common/constants/enviroment.js","../../common/api/auth.js","../../common/constants/storage.js","../../common/helpers/shared.js","components/Docket/Docket.js"],"names":["axios","defaults","baseURL","DEFAULT_BASE_URL","getAccessToken","a","storage","getStorage","get","ACCESS_TOKEN","accessToken","REFRESH_TOKEN","refreshToken","Error","accessPayload","jwtDecode","Date","parseInt","exp","post","refresh","newAccessToken","data","access","set","loadAPI","url","opts","onSuccess","onFailure","error","secure","defaultData","headers","options","Authorization","res","status","undefined","loading","response","request","e","message","getJWTTokens","username","password","method","getUserMeta","createEmployee","email","first_name","last_name","createClient","retrieveClients","createProduct","req","Math","random","toString","substr","retrieveProducts","editProduct","id","retrieveProduct","createKit","kit_name","kit_info","components_per_kit","kit_client","part_name","part_number","kit_type","products","active","editKit","retrieveKits","retrieveKitsClients","retrieveKit","createOutward","editOutward","deleteOutward","retrieveOutward","retrieveOutwardDocketEmp","createVendor","name","street","city","pincode","state","contact_person_name","contact_person_no","type","payment_terms","pan","gst","code","remarks","beneficiary_name","account_no","bank_name","ifsc","editVendor","retrieveVendor","retrieveVendors","createWarehouse","editWarehouse","retrieveWarehouse","retrieveWarehouses","editClientProfile","retrieveClientProfile","createReceiverClient","address","emitter","editReceiverClient","retrieveReceiverClient","retieveReceiverClients","retieveReceiverClientsClientSide","createFlow","flow_name","flow_info","flow_type","flow_days","sender_client","receiver_client","kits","editFlow","retreiveFlow","retreiveFlows","retreiveFlowsClient","createMr","delivery_required_on","flows","client_id","editMr","editAddMr","retrieveMr","retrieveAddMr","retrieveMrs","deleteMr","deleteAddMr","createDm","delivery_month","demand_flows","editDm","retrieveDm","retrieveDms","retrieveDmsClient","deleteDm","retrieveEmployeeMrsEfficient","createAllotment","transaction_no","dispatch_date","send_from_warehouse","sales_order","is_delivered","model","driver_name","driver_number","lr_number","vehicle_number","freight_charges","vehicle_type","transport_by","expected_delivery","editAllotment","retrieveAllotments","params","retrieveAllotmentsCalender","tno","deleteAllotment","createGRN","editGRN","retrieveGRN","deleteGRN","createDelivered","editDelivered","retrieveDelivered","createOutwardDeliveredDocket","editOutwardDeliveredDocket","retrieveOutwardDeliveredDocket","leadFileUpload","tpFileUpload","tpFileReUpload","createReturn","editReturn","transaction_date","transaction_type","flow","warehouse","retrieveReturn","retrieveReturns","deleteReturn","createReceived","editReceived","retrieveReceived","allDelivered","allInward","allReceived","retrieveGRNBars","retrieveAllotmentReport","cname","to","from","retrieveReturnReport","retrieveAllotmentsDelivered","retrieveDocketOutwardInward","retrieveReturnDocket","retrieveReturnDocketCaleder","createLead","retrieveLeads","retrieveCP","retrievePFEP","editLead","retrieveLead","deleteLead","postAltBarcodes","postReturnBarcodes","createPFEP","deletePFEP","editPFEP","createCP","deleteCP","editCP","retrieveTestInv","createTestInv","retrieveSC2TestInvClientSide","rp","retrieveSC2TestInv","createSC2TestInv","retrieveRC2TestInv","createRC2TestInv","createMRStatus","createExpense","src","retrieveExpenses","deleteExpense","retrieveExpense","editExpenseTest","createAdjustment","retrieveAdjustments","retrieveAdjustmentClients","uploadAdjustmentDocument","createClientAdjustment","createGroup","retrieveGroups","deleteGroup","retrieveGroup","editGroup","createSCAdjustment","retrieveSCAdjustments","createRCAdjustment","retrieveRCAdjustments","createRelocation","retrieveRelocations","deleteRelocation","retrieveRelocation","editRelocation","retrieveRelocationDocketData","window","global","Title","Docket","location","match","useState","allotment","setAllotment","total","setTotal","useEffect","len","pathname","length","slice","fetchAllotment","tot","map","alloted","alloted_quantity","kit","prod","quantity","product","priceperunit","calcTotal","b","className","process","alt","level","style","fontWeight","span","display","moment","format","idx","fontFamily","wordWrap","client_name","client_shipping_address","client_shipping_city","client_shipping_state","client_shipping_pincode","client_gst","bordered","size","flexDirection","hsn_code","short_code","textTransform","String","fromCharCode","num","n","str","Number","inWords","pageBreakInside","width","justifyContent","alignItems","padding","margin","fontSize","color","spinning","position","marginLeft","marginTop"],"mappings":"mOAQAA,IAAMC,SAASC,QAAUC,IAEzB,IAAMC,EAAc,uCAAG,sCAAAC,EAAA,6DACfC,EAAUC,cADK,SAGKD,EAAQE,IAAIC,IAAc,MAH/B,cAGfC,EAHe,gBAIMJ,EAAQE,IAAIG,IAAe,MAJjC,UAIfC,EAJe,OAKfF,GAAeE,EALA,sBAKqBC,MAAM,iBAL3B,UAOfC,EAAgBC,EAAUL,KAC5B,IAAIM,KAAuC,IAAlCC,SAASH,EAAcI,IAAK,KAAc,IAAIF,MARtC,0CAQqDN,GARrD,yBAYXV,IAAMmB,KAAK,sBAAuB,CAC1CC,QAASR,IAbU,wBAWHS,EAXG,EAWnBC,KAAQC,OAXW,UAgBfjB,EAAQkB,IAAIf,IAAcY,GAhBX,iCAkBdA,GAlBc,4CAAH,qDAqBPI,EAAO,uCAAG,WAAOC,GAAP,yDAAArB,EAAA,yDAAYsB,EAAZ,+BAAmB,GAAnB,EAQjBA,EANFC,iBAFmB,MAEP,SAACN,GAAD,OAAUA,GAFH,IAQjBK,EALFE,iBAHmB,MAGP,SAACC,GAAD,OAAWA,GAHJ,IAQjBH,EAJFI,cAJmB,SAQjBJ,EAHFK,YACAC,EAEEN,EAFFM,QACGC,EAPgB,YAQjBP,EARiB,0EAWD3B,IAXC,KAWK0B,EAXL,oCAaXK,EAbW,iDAa+B3B,IAb/B,2DAaA+B,cAbA,mCAasD,GAbtD,2DAcZF,EAdY,mCAYjBA,QAZiB,aAgBdC,EAhBc,0EAWbE,EAXa,OAmBXd,EAAiBc,EAAjBd,KAAMe,EAAWD,EAAXC,OAnBK,UAoBbT,EAAUN,GApBG,iCAqBZ,CAAEA,OAAMe,SAAQP,WAAOQ,EAAWC,SAAS,IArB/B,uCAuBf,MAAMC,SAvBS,0BAwBQ,MAAMA,SAAvBlB,EAxBS,EAwBTA,KAAMe,EAxBG,EAwBHA,OAxBG,UAyBXR,EAAUP,GAzBC,iCA0BV,CAAEA,UAAMgB,EAAWD,SAAQP,MAAOR,EAAMiB,SAAS,IA1BvC,YA6Bf,MAAME,QA7BS,wBA8BXC,EAAI,CAAEC,QAAS,0BA9BJ,kBAgCV,CAAErB,UAAMgB,EAAWD,OAAQ,EAAGP,MAAOY,EAAGH,SAAS,IAhCvC,cAmCb1B,MAAM,EAAD,KAnCQ,0DAAH,uD,iCC/BpB,kCACO,IAAMV,EAAmB,sC,iCCDhC,+wJAEayC,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,SAAZ,OAC1BrB,YAAQ,cAAe,CACrBsB,OAAQ,OACRzB,KAAM,CAACuB,WAAUC,YACjBf,QAAQ,KAgBCiB,EAAc,kBAAMvB,YAAQ,gBAE5BwB,EAAiB,SAAC,GAAD,IAAEJ,EAAF,EAAEA,SAAUK,EAAZ,EAAYA,MAAOJ,EAAnB,EAAmBA,SAAUK,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,UAAzC,OAC5B3B,YAAQ,oBAAqB,CAC3BsB,OAAQ,OACRzB,KAAM,CAACuB,WAAUK,QAAOJ,WAAUK,aAAYC,aAC9CrB,QAAQ,KAGCsB,EAAe,SAAC,GAAD,IAAER,EAAF,EAAEA,SAAUK,EAAZ,EAAYA,MAAOJ,EAAnB,EAAmBA,SAAUK,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,UAAzC,OAC1B3B,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRzB,KAAM,CAACuB,WAAUK,QAAOJ,WAAUK,aAAYC,aAC9CrB,QAAQ,KAGCuB,EAAkB,kBAC7B7B,YAAQ,YAAa,CACnBsB,OAAQ,MACRhB,QAAQ,KAGCwB,EAAgB,SAACC,GAAD,OAC3B/B,YAAQ,mBAAoB,CAC1BsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EC,EAAmB,kBAC9BpC,YAAQ,aAAc,CACpBsB,OAAQ,MACRhB,QAAQ,KAGC+B,EAAc,SAACC,EAAIP,GAC9B,OAAO/B,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CACrChB,OAAQ,QACRhB,QAAQ,EACRT,KAAMkC,EACNvB,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAK1EI,EAAkB,SAACD,GAAD,OAC7BtC,YAAQ,iBAAD,OAAkBsC,GAAM,CAC7BhB,OAAQ,MACRhB,QAAQ,KASCkC,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,SACAC,EAFuB,EAEvBA,SACAC,EAHuB,EAGvBA,mBACAC,EAJuB,EAIvBA,WACAC,EALuB,EAKvBA,UACAC,EANuB,EAMvBA,YACAC,EAPuB,EAOvBA,SACAC,EARuB,EAQvBA,SACAC,EATuB,EASvBA,OATuB,OAWvBjD,YAAQ,eAAgB,CACtBsB,OAAQ,OACRhB,QAAQ,EACRT,KAAM,CACJ4C,WACAC,WACAC,qBACAC,aACAC,YACAC,cACAC,WACAC,WACAC,aAIOC,EAAU,SACrBZ,EADqB,OAGnBG,EAHmB,EAGnBA,SACAC,EAJmB,EAInBA,SACAC,EALmB,EAKnBA,mBACAC,EANmB,EAMnBA,WACAC,EAPmB,EAOnBA,UACAC,EARmB,EAQnBA,YACAC,EATmB,EASnBA,SACAC,EAVmB,EAUnBA,SACAC,EAXmB,EAWnBA,OAXmB,OAcrBjD,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,QACRhB,QAAQ,EACRT,KAAM,CACJ4C,WACAC,WACAC,qBACAC,aACAC,YACAC,cACAC,WACAC,WACAC,aAIOE,EAAe,kBAC1BnD,YAAQ,SAAU,CAChBsB,OAAQ,MACRhB,QAAQ,KAGC8C,EAAsB,kBACjCpD,YAAQ,gBAAiB,CACvBsB,OAAQ,MACRhB,QAAQ,KAGC+C,EAAc,SAACf,GAAD,OACzBtC,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,MACRhB,QAAQ,KASCgD,EAAgB,SAACzD,GAAD,OAC3BG,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRhB,QAAQ,EACRT,UAGS0D,EAAc,SAACjB,EAAIzC,GAAL,OACzBG,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRhB,QAAQ,EACRT,UAGS2D,EAAgB,SAAClB,GAAD,OAC3BtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,SACRhB,QAAQ,KAGCmD,EAAkB,SAACnB,GAAD,OAC7BtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,MACRhB,QAAQ,KAQCoD,EAA2B,SAACpB,GAAD,OACtCtC,YAAQ,oBAAD,OAAqBsC,GAAM,CAChChB,OAAQ,MACRhB,QAAQ,KAGCqD,EAAe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,KACAC,EAF0B,EAE1BA,OACAC,EAH0B,EAG1BA,KACAC,EAJ0B,EAI1BA,QACAC,EAL0B,EAK1BA,MACAC,EAN0B,EAM1BA,oBACAC,EAP0B,EAO1BA,kBACAzC,EAR0B,EAQ1BA,MACA0C,EAT0B,EAS1BA,KACAC,EAV0B,EAU1BA,cACAC,EAX0B,EAW1BA,IACAC,EAZ0B,EAY1BA,IACAC,EAb0B,EAa1BA,KACAC,EAd0B,EAc1BA,QACAC,EAf0B,EAe1BA,iBACAC,EAhB0B,EAgB1BA,WACAC,EAjB0B,EAiB1BA,UACAC,EAlB0B,EAkB1BA,KACA3B,EAnB0B,EAmB1BA,OAnB0B,OAqB1BjD,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRzB,KAAM,CACJ+D,OACAC,SACAC,OACAC,UACAC,QACAC,sBACAC,oBACAzC,QACA0C,OACAC,gBACAC,MACAC,MACAC,OACAC,UACAC,mBACAC,aACAC,YACAC,OACA3B,UAEF3C,QAAQ,KAGCuE,EAAa,SACxBvC,EADwB,OAGtBsB,EAHsB,EAGtBA,KACAC,EAJsB,EAItBA,OACAC,EALsB,EAKtBA,KACAC,EANsB,EAMtBA,QACAC,EAPsB,EAOtBA,MACAC,EARsB,EAQtBA,oBACAC,EATsB,EAStBA,kBACAzC,EAVsB,EAUtBA,MACA0C,EAXsB,EAWtBA,KACAC,EAZsB,EAYtBA,cACAC,EAbsB,EAatBA,IACAC,EAdsB,EActBA,IACAC,EAfsB,EAetBA,KACAC,EAhBsB,EAgBtBA,QACAC,EAjBsB,EAiBtBA,iBACAC,EAlBsB,EAkBtBA,WACAC,EAnBsB,EAmBtBA,UACAC,EApBsB,EAoBtBA,KACA3B,EArBsB,EAqBtBA,OArBsB,OAwBxBjD,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRzB,KAAM,CACJ+D,OACAC,SACAC,OACAC,UACAC,QACAC,sBACAC,oBACAzC,QACA0C,OACAC,gBACAC,MACAC,MACAC,OACAC,UACAC,mBACAC,aACAC,YACAC,OACA3B,UAEF3C,QAAQ,KASCwE,EAAiB,SAACxC,GAAD,OAC5BtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,MACRhB,QAAQ,KAGCyE,EAAkB,kBAC7B/E,YAAQ,YAAa,CACnBsB,OAAQ,MACRhB,QAAQ,KAGC0E,EAAkB,SAACjD,GAAD,OAC7B/B,YAAQ,qBAAsB,CAC5BsB,OAAQ,OACRhB,QAAQ,EACRT,KAAMkC,EACNvB,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E8C,EAAgB,SAAC3C,EAAIP,GAAL,OAC3B/B,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,QACRhB,QAAQ,EACRT,KAAMkC,EACNvB,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAU1E+C,EAAoB,SAAC5C,GAAD,OAC/BtC,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,MACRhB,QAAQ,KAGC6E,EAAqB,kBAChCnF,YAAQ,cAAe,CACrBsB,OAAQ,MACRhB,QAAQ,KAGC8E,EAAoB,SAAC9C,EAAIP,GAAL,OAC/B/B,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,QACRhB,QAAQ,EACRT,KAAMkC,EACNvB,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EkD,EAAwB,SAAC/C,GAAD,OACnCtC,YAAQ,mBAAD,OAAoBsC,GAAM,CAC/BhB,OAAQ,MACRhB,QAAQ,KAGCgF,EAAuB,SAAC,GAAD,IAAE1B,EAAF,EAAEA,KAAME,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,QAASnB,EAAhC,EAAgCA,IAAKC,EAArC,EAAqCA,IAAKrB,EAA1C,EAA0CA,OAA1C,OAClCjD,YAAQ,0BAA2B,CACjCsB,OAAQ,OACRzB,KAAM,CAAC+D,OAAME,OAAMyB,UAASC,UAASnB,MAAKC,MAAKrB,UAC/C3C,QAAQ,KAGCmF,EAAqB,SAACnD,EAAD,OAAMsB,EAAN,EAAMA,KAAME,EAAZ,EAAYA,KAAMyB,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,QAASnB,EAApC,EAAoCA,IAAKC,EAAzC,EAAyCA,IAAKrB,EAA9C,EAA8CA,OAA9C,OAEhCjD,WADA,CACQ,wBAAD,OAAyBsC,EAAzB,KAAgC,CACrChB,OAAQ,QACRzB,KAAM,CAAC+D,OAAME,OAAMyB,UAASC,UAASnB,MAAKC,MAAKrB,UAC/C3C,QAAQ,KASCoF,EAAyB,SAACpD,GAAD,OACpCtC,YAAQ,wBAAD,OAAyBsC,EAAzB,KAAgC,CACrChB,OAAQ,MACRhB,QAAQ,KAGCqF,EAAyB,SAACrD,GAAD,OACpCtC,YAAQ,oBAAqB,CAC3BsB,OAAQ,MACRhB,QAAQ,KAGCsF,EAAmC,kBAC9C5F,YAAQ,2BAA4B,CAClCsB,OAAQ,MACRhB,QAAQ,KAGCuF,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,UACAC,EAFwB,EAExBA,UACAC,EAHwB,EAGxBA,UACAC,EAJwB,EAIxBA,UACAC,EALwB,EAKxBA,cACAC,EANwB,EAMxBA,gBACAC,EAPwB,EAOxBA,KACAnD,EARwB,EAQxBA,OARwB,OAUxBjD,YAAQ,gBAAiB,CACvBsB,OAAQ,OACRhB,QAAQ,EACRT,KAAM,CACJiG,YACAC,YACAC,YACAC,YACAC,gBACAC,kBACAC,OACAnD,aAIOoD,EAAW,SACtB/D,EADsB,OAErBwD,EAFqB,EAErBA,UAAWC,EAFU,EAEVA,UAAWC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,cAAeC,EAFtC,EAEsCA,gBAAiBC,EAFvD,EAEuDA,KAAMnD,EAF7D,EAE6DA,OAF7D,OAItBjD,YAAQ,cAAD,OAAesC,EAAf,KAAsB,CAC3BhB,OAAQ,QACRhB,QAAQ,EACRT,KAAM,CACJiG,YACAC,YACAC,YACAC,YACAC,gBACAC,kBACAC,OACAnD,aAIOqD,EAAe,SAAChE,GAAD,OAC1BtC,YAAQ,cAAD,OAAesC,EAAf,KAAsB,CAC3BhB,OAAQ,MACRhB,QAAQ,KAGCiG,EAAgB,kBAC3BvG,YAAQ,UAAW,CACjBsB,OAAQ,MACRhB,QAAQ,KAGCkG,EAAsB,kBACjCxG,YAAQ,iBAAkB,CACxBsB,OAAQ,MACRhB,QAAQ,KAeCmG,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,qBAAsBC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,UAA/B,OACtB5G,YAAQ,oBAAqB,CAC3BsB,OAAQ,OACRzB,KAAM,CAAC6G,uBAAsBC,QAAOC,aACpCtG,QAAQ,KAGCuG,EAAS,SAACvE,EAAD,OAAMoE,EAAN,EAAMA,qBAAsBC,EAA5B,EAA4BA,MAA5B,OACpB3G,YAAQ,kBAAD,OAAmBsC,EAAnB,KAA0B,CAC/BhB,OAAQ,QACRzB,KAAM,CAAC6G,uBAAsBC,SAC7BrG,QAAQ,KAGCwG,EAAY,SAACxE,EAAD,OAAMoE,EAAN,EAAMA,qBAAsBC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,UAAnC,OACvB5G,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,QACRzB,KAAM,CAAC6G,uBAAsBC,QAAOC,aACpCtG,QAAQ,KAGCyG,EAAa,SAACzE,GAAD,OACxBtC,YAAQ,kBAAD,OAAmBsC,EAAnB,KAA0B,CAC/BhB,OAAQ,MACRhB,QAAQ,KAGC0G,EAAgB,SAAC1E,GAAD,OAC3BtC,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,MACRhB,QAAQ,KAGC2G,EAAc,kBACzBjH,YAAQ,aAAc,CACpBsB,OAAQ,MACRhB,QAAQ,KAGC4G,EAAW,SAAC5E,GAAD,OACtBtC,YAAQ,kBAAD,OAAmBsC,EAAnB,KAA0B,CAC/BhB,OAAQ,SACRhB,QAAQ,KAGC6G,EAAc,SAAC7E,GAAD,OACzBtC,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,SACRhB,QAAQ,KAGC8G,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,aAAcV,EAAhC,EAAgCA,UAAhC,OACtB5G,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRzB,KAAM,CAACwH,iBAAgBC,eAAcV,aACrCtG,QAAQ,KAGCiH,EAAS,SAACjF,EAAD,OAAM+E,EAAN,EAAMA,eAAgBC,EAAtB,EAAsBA,aAAtB,OACpBtH,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRzB,KAAM,CAACwH,iBAAgBC,gBACvBhH,QAAQ,KAUCkH,EAAa,SAAClF,GAAD,OACxBtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,MACRhB,QAAQ,KASCmH,GAAc,kBACzBzH,YAAQ,YAAa,CACnBsB,OAAQ,MACRhB,QAAQ,KAGCoH,GAAoB,kBAC/B1H,YAAQ,mBAAoB,CAC1BsB,OAAQ,MACRhB,QAAQ,KAGCqH,GAAW,SAACrF,GAAD,OACtBtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,SACRhB,QAAQ,KAeCsH,GAA+B,kBAC1C5H,YAAQ,sBAAuB,CAC7BsB,OAAQ,MACRhB,QAAQ,KAGCuH,GAAkB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,eACAC,EAF6B,EAE7BA,cACAC,EAH6B,EAG7BA,oBACAC,EAJ6B,EAI7BA,YACAtB,EAL6B,EAK7BA,MACAuB,EAN6B,EAM7BA,aACAC,EAP6B,EAO7BA,MACAC,EAR6B,EAQ7BA,YACAC,EAT6B,EAS7BA,cACAC,EAV6B,EAU7BA,UACAC,EAX6B,EAW7BA,eACAC,EAZ6B,EAY7BA,gBACAC,EAb6B,EAa7BA,aACAC,EAd6B,EAc7BA,aACAC,EAf6B,EAe7BA,kBACAnE,EAhB6B,EAgB7BA,QAhB6B,OAkB7BxE,YAAQ,qBAAsB,CAC5BsB,OAAQ,OACRzB,KAAM,CACJiI,iBACAC,gBACAC,sBACAC,cACAtB,QACAuB,eACAC,QACAC,cACAC,gBACAC,YACAC,iBACAC,kBACAC,eACAC,eACAC,oBACAnE,WAEFlE,OAAQ,UAGCsI,GAAgB,SAC3BtG,EAD2B,OAGzByF,EAHyB,EAGzBA,cACAC,EAJyB,EAIzBA,oBACAC,EALyB,EAKzBA,YACAtB,EANyB,EAMzBA,MACAwB,EAPyB,EAOzBA,MACAC,EARyB,EAQzBA,YACAC,EATyB,EASzBA,cACAC,EAVyB,EAUzBA,UACAC,EAXyB,EAWzBA,eACAC,EAZyB,EAYzBA,gBACAC,EAbyB,EAazBA,aACAC,EAdyB,EAczBA,aACAC,EAfyB,EAezBA,kBACAnE,EAhByB,EAgBzBA,QAhByB,OAmB3BxE,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,QACRzB,KAAM,CACJkI,gBACAC,sBACAC,cACAtB,QACAwB,QACAC,cACAC,gBACAC,YACAC,iBACAC,kBACAC,eACAC,eACAC,oBACAnE,WAEFlE,QAAQ,KASCuI,GAAqB,SAACvG,GAAD,OAChCtC,YAAQ,eAAgB,CACtBsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CAACxG,SAGAyG,GAA6B,SAACC,GAAD,OACxChJ,YAAQ,wBAAD,OAAyBgJ,GAAO,CACrC1H,OAAQ,MACRhB,QAAQ,KAGC2I,GAAkB,SAAC3G,GAAD,OAC7BtC,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,SACRhB,QAAQ,KAGC4I,GAAY,SAACrJ,GAAD,OACvBG,YAAQ,eAAgB,CACtBsB,OAAQ,OACRhB,QAAQ,EACRT,UAMSsJ,GAAU,SAAC7G,EAAIzC,GAAL,OACrBG,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,QACRhB,QAAQ,EACRT,UAMSuJ,GAAc,SAAC9G,GAAD,OACzBtC,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,MACRhB,QAAQ,KASC+I,GAAY,SAAC/G,GAAD,OACvBtC,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,SACRhB,QAAQ,KAGCgJ,GAAkB,SAACvH,GAAD,OAC7B/B,YAAQ,qBAAsB,CAC5BsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAG1EoH,GAAgB,SAACjH,EAAIP,GAAL,OAC3B/B,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EqH,GAAoB,SAAClH,GAAD,OAC/BtC,YAAQ,mBAAD,OAAoBsC,EAApB,KAA2B,CAChChB,OAAQ,MACRhB,QAAQ,KAGCmJ,GAA+B,SAAC1H,GAAD,OAC1C/B,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAG1EuH,GAA6B,SAACpH,EAAIP,GAAL,OACxC/B,YAAQ,aAAD,OAAcsC,EAAd,KAAqB,CAC1BhB,OAAQ,QACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EwH,GAAiC,SAACrH,GAAD,OAC5CtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,MACRhB,QAAQ,KASCsJ,GAAiB,SAAC7H,GAAD,OAC5B/B,YAAQ,gBAAiB,CACvBsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E0H,GAAe,SAAC9H,GAAD,OAC1B/B,YAAQ,cAAe,CACrBsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E2H,GAAiB,SAACxH,EAAIP,GAAL,OAC5B/B,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E4H,GAAe,SAAClK,GAAD,OAC1BG,YAAQ,kBAAmB,CACzBsB,OAAQ,OACRzB,OACAS,OAAQ,UAGC0J,GAAa,SACxB1H,EADwB,OAGtBwF,EAHsB,EAGtBA,eACAmC,EAJsB,EAItBA,iBACAC,EALsB,EAKtBA,iBACAC,EANsB,EAMtBA,KACA/D,EAPsB,EAOtBA,KACAgC,EARsB,EAQtBA,YACAC,EATsB,EAStBA,cACAC,EAVsB,EAUtBA,UACAC,EAXsB,EAWtBA,eACAC,EAZsB,EAYtBA,gBACAC,EAbsB,EAatBA,aACAC,EAdsB,EActBA,aACA0B,EAfsB,EAetBA,UACAjE,EAhBsB,EAgBtBA,gBACA3B,EAjBsB,EAiBtBA,QAjBsB,OAoBxBxE,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,QACRzB,KAAM,CACJiI,iBACAmC,mBACAC,mBACAC,OACA/D,OACAgC,cACAC,gBACAC,YACAC,iBACAC,kBACAC,eACAC,eACA0B,YACAjE,kBACA3B,WAEFlE,OAAQ,UAGC+J,GAAiB,SAAC/H,GAAD,OAC5BtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,MACRhB,QAAQ,KASCgK,GAAkB,SAAChI,GAAD,OAC7BtC,YAAQ,oBAAqB,CAC3BsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CAACxG,SASAiI,GAAe,SAACjI,GAAD,OAC1BtC,YAAQ,gBAAD,OAAiBsC,EAAjB,KAAwB,CAC7BhB,OAAQ,SACRhB,QAAQ,KASCkK,GAAiB,SAACzI,GAAD,OAC5B/B,YAAQ,oBAAqB,CAC3BsB,OAAQ,OACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EsI,GAAe,SAACnI,EAAIP,GAAL,OAE1B/B,WADA,CACQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,QACRzB,KAAMkC,EACNzB,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EuI,GAAmB,SAACpI,GAAD,OAC9BtC,YAAQ,kBAAD,OAAmBsC,EAAnB,KAA0B,CAC/BhB,OAAQ,MACRhB,QAAQ,KASCqK,GAAe,kBAC1B3K,YAAQ,cAAe,CACrBsB,OAAQ,MACRhB,QAAQ,KAGCsK,GAAY,kBACvB5K,YAAQ,WAAY,CAClBsB,OAAQ,MACRhB,QAAQ,KAGCuK,GAAc,kBAAM7K,YAAQ,aAAc,KAE1C8K,GAAkB,SAACxI,GAAD,OAC7BtC,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,MACRhB,QAAQ,KASCyK,GAA0B,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,GAAIC,EAAb,EAAaA,KAAb,OACrClL,YAAQ,sBAAuB,CAC7BsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CACNkC,QACAC,KACAC,WAeOC,GAAuB,SAAC,GAAD,IAAEH,EAAF,EAAEA,MAAOC,EAAT,EAASA,GAAIC,EAAb,EAAaA,KAAb,OAClClL,YAAQ,mBAAoB,CAC1BsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CACNkC,QACAC,KACAC,WAIOE,GAA8B,SAAC9I,GAAD,OACzCtC,YAAQ,yBAA0B,CAChCsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CAACxG,SAGA+I,GAA8B,SAAC/I,GAAD,OACzCtC,YAAQ,mBAAoB,CAC1BsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CAACxG,SAGAgJ,GAAuB,SAAChJ,GAAD,OAClCtC,YAAQ,kBAAmB,CACzBsB,OAAQ,MACRhB,QAAQ,EACRwI,OAAQ,CACNxG,SAIOiJ,GAA8B,SAACjJ,GAAD,OACzCtC,YAAQ,qBAAD,OAAsBsC,GAAM,CACjChB,OAAQ,MACRhB,QAAQ,KAGCkL,GAAa,SAAC3L,GAAD,OACxBG,YAAQ,iBAAkB,CACxBsB,OAAQ,OACRhB,QAAQ,EACRT,UAGS4L,GAAgB,kBAC3BzL,YAAQ,UAAW,CACjBsB,OAAQ,MACRhB,QAAQ,KAGCoL,GAAa,kBACxB1L,YAAQ,OAAQ,CACdsB,OAAQ,MACRhB,QAAQ,KAGCqL,GAAe,kBAC1B3L,YAAQ,SAAU,CAChBsB,OAAQ,MACRhB,QAAQ,KAGCsL,GAAW,SAACtJ,EAAIzC,GAAL,OACtBG,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,QACRhB,QAAQ,EACRT,UAGSgM,GAAe,SAACvJ,GAAD,OAC1BtC,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,MACRhB,QAAQ,KAGCwL,GAAa,SAACxJ,GAAD,OACxBtC,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,SACRhB,QAAQ,KAGCyL,GAAkB,SAAClM,GAC9B,OAAOG,YAAQ,sBAAuB,CACpCsB,OAAQ,OACRhB,QAAQ,EACRT,UAISmM,GAAqB,SAACnM,GACjC,OAAOG,YAAQ,mBAAoB,CACjCsB,OAAQ,OACRhB,QAAQ,EACRT,UAGSoM,GAAa,SAACpM,GACzB,OAAOG,YAAQ,eAAgB,CAC7BsB,OAAQ,OACRhB,QAAQ,EACRT,UAISqM,GAAa,SAAC5J,GAAD,OACxBtC,YAAQ,cAAD,OAAesC,EAAf,KAAsB,CAC3BhB,OAAQ,SACRhB,QAAQ,KAGC6L,GAAW,SAAC7J,EAAIzC,GAAL,OACtBG,YAAQ,cAAD,OAAesC,EAAf,KAAsB,CAC3BhB,OAAQ,QACRhB,QAAQ,EACRT,UAGSuM,GAAW,SAACvM,GACvB,OAAOG,YAAQ,aAAc,CAC3BsB,OAAQ,OACRhB,QAAQ,EACRT,UAISwM,GAAW,SAAC/J,GAAD,OACtBtC,YAAQ,YAAD,OAAasC,EAAb,KAAoB,CACzBhB,OAAQ,SACRhB,QAAQ,KAGCgM,GAAS,SAAChK,EAAIzC,GAAL,OACpBG,YAAQ,YAAD,OAAasC,EAAb,KAAoB,CACzBhB,OAAQ,QACRhB,QAAQ,EACRT,UAGS0M,GAAkB,SAAC1M,GAC9B,OAAOG,YAAQ,aAAc,CAC3BsB,OAAQ,MACRhB,QAAQ,EACRT,UAIS2M,GAAgB,SAAC3M,GAC5B,OAAOG,YAAQ,cAAe,CAC5BsB,OAAQ,OACRhB,QAAQ,EACRT,UAUS4M,GAA+B,SAACC,GAC3C,OAAO1M,YAAQ,oBAAD,OAAqB0M,EAAGpK,IAAM,CAC1ChB,OAAQ,MACRhB,QAAQ,KAICqM,GAAqB,SAAC9M,GACjC,OAAOG,YAAQ,gBAAiB,CAC9BsB,OAAQ,MACRhB,QAAQ,EACRT,UAIS+M,GAAmB,SAAC/M,GAC/B,OAAOG,YAAQ,iBAAkB,CAC/BsB,OAAQ,OACRhB,QAAQ,EACRT,UAUSgN,GAAqB,SAAChN,GACjC,OAAOG,YAAQ,gBAAiB,CAC9BsB,OAAQ,MACRhB,QAAQ,EACRT,UAISiN,GAAmB,SAACjN,GAC/B,OAAOG,YAAQ,iBAAkB,CAC/BsB,OAAQ,OACRhB,QAAQ,EACRT,UAUSkN,GAAiB,SAAClN,GAC7B,OAAOG,YAAQ,mBAAoB,CACjCsB,OAAQ,OACRhB,QAAQ,EACRT,UAISmN,GAAgB,SAACC,GAAD,OAC3BjN,YAAQ,mBAAoB,CAC1BsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E+K,GAAmB,kBAC9BlN,YAAQ,aAAc,CACpBsB,OAAQ,MACRhB,QAAQ,KAGC6M,GAAgB,SAAC7K,GAAD,OAC3BtC,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,SACRhB,QAAQ,KAGC8M,GAAkB,SAAC9K,GAAD,OAC7BtC,YAAQ,iBAAD,OAAkBsC,EAAlB,KAAyB,CAC9BhB,OAAQ,MACRhB,QAAQ,KAUC+M,GAAkB,SAAC/K,EAAI2K,GAAL,OAC7BjN,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,QACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EmL,GAAmB,SAACL,GAAD,OAC9BjN,YAAQ,uBAAwB,CAC9BsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EoL,GAAsB,kBACjCvN,YAAQ,gBAAiB,CACvBsB,OAAQ,MACRhB,QAAQ,KAGCkN,GAA4B,kBACvCxN,YAAQ,iBAAkB,CACxBsB,OAAQ,MACRhB,QAAQ,KAGCmN,GAA2B,SAACR,GAAD,OACtCjN,YAAQ,iBAAkB,CACxBsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EuL,GAAyB,SAACT,GAAD,OACpCjN,YAAQ,wBAAyB,CAC/BsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,KAGCqN,GAAc,SAACV,GAAD,OACzBjN,YAAQ,iBAAkB,CACxBsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,KAGCsN,GAAiB,kBAC5B5N,YAAQ,UAAW,CACjBsB,OAAQ,MACRhB,QAAQ,KAGCuN,GAAc,SAACvL,GAAD,OACzBtC,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,SACRhB,QAAQ,KAGCwN,GAAgB,SAACxL,GAAD,OAC3BtC,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,MACRhB,QAAQ,KAGCyN,GAAY,SAACzL,EAAI2K,GAAL,OACvBjN,YAAQ,eAAD,OAAgBsC,EAAhB,KAAuB,CAC5BhB,OAAQ,QACRzB,KAAMoN,EACN3M,QAAQ,KAGC0N,GAAqB,SAACf,GAAD,OAChCjN,YAAQ,0BAA2B,CACjCsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1E8L,GAAwB,kBACnCjO,YAAQ,mBAAoB,CAC1BsB,OAAQ,MACRhB,QAAQ,KAGC4N,GAAqB,SAACjB,GAAD,OAChCjN,YAAQ,0BAA2B,CACjCsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,EACRE,QAAS,CACP,uDAAiDwB,KAAKC,SAASC,WAAWC,OAAO,QAI1EgM,GAAwB,kBACnCnO,YAAQ,mBAAoB,CAC1BsB,OAAQ,MACRhB,QAAQ,KAGC8N,GAAmB,SAACnB,GAAD,OAC9BjN,YAAQ,sBAAuB,CAC7BsB,OAAQ,OACRzB,KAAMoN,EACN3M,QAAQ,KAMC+N,GAAsB,kBACjCrO,YAAQ,gBAAiB,CACvBsB,OAAQ,MACRhB,QAAQ,KAGCgO,GAAmB,SAAChM,GAAD,OAC9BtC,YAAQ,oBAAD,OAAqBsC,EAArB,KAA4B,CACjChB,OAAQ,SACRhB,QAAQ,KAGCiO,GAAqB,SAACjM,GAAD,OAChCtC,YAAQ,oBAAD,OAAqBsC,EAArB,KAA4B,CACjChB,OAAQ,MACRhB,QAAQ,KAGCkO,GAAiB,SAAClM,EAAI2K,GAAL,OAC5BjN,YAAQ,oBAAD,OAAqBsC,EAArB,KAA4B,CACjChB,OAAQ,QACRzB,KAAMoN,EACN3M,QAAQ,KAGCmO,GAA+B,SAACzF,GAAD,OAC1ChJ,YAAQ,6BAAD,OAA8BgJ,GAAO,CAC1C1H,OAAQ,MACRhB,QAAQ,M,iCCh4CZ,oEAAO,IAAMtB,EAAe,eACfE,EAAgB,iB,kCCD7B,8CAAO,IAAMJ,EAAa,kBAAO4P,OAASA,OAAO7P,QAAU8P,EAAO9P,W,+OCU3D+P,G,kBAAAA,OAoaQC,UAlaA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAqB,KAAXC,MACSC,mBAAS,OADP,mBAC7BC,EAD6B,KAClBC,EADkB,OAEVF,mBAAS,GAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAIpCC,oBAAS,sBAAC,sBAAAzQ,EAAA,sFAAAA,EAAA,MACe,sCAAAA,EAAA,0DACjBkQ,EAAS9K,MADQ,oBAEf8K,EAAS9K,MAAM1B,GAFA,gCAGIyG,aAA2B+F,EAAS9K,MAAM1B,IAH9C,iBAGVzC,EAHU,EAGVA,OAEGqP,EAAarP,GALN,qCAQbyP,EAAMR,EAASS,SAASC,OACxBlN,EAAKwM,EAASS,SAASE,MAAM,GAAIH,GATpB,UAUEvG,aAA2BzG,GAV7B,kBAUZzC,EAVY,EAUZA,OAEGqP,EAAarP,GAZJ,4CADf,qDAgBR6P,GAhBQ,2CAiBP,CAACZ,IAEJO,qBAAU,YACU,WAChB,IAAIM,EAAM,EACNV,GACFA,EAAUtI,MAAMiJ,KAAI,SAACzF,GACnB,IAAM0F,EAAU1F,EAAK2F,iBAKrB,OAJA3F,EAAK4F,IAAI/M,SAAS4M,KAAI,SAACI,GAErB,OADAL,GAAOE,EAAUG,EAAKC,SAAWD,EAAKE,QAAQC,aACvC,QAEF,QAGXf,EAASO,GAEXS,KACC,CAACnB,IAEJ,IAAMrQ,EAAI,CACR,GACA,OACA,OACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,OACA,UACA,UACA,YACA,YACA,WACA,WACA,aACA,YACA,aAEIyR,EAAI,CAAC,GAAI,GAAI,SAAU,SAAU,QAAS,QAAS,QAAS,UAAW,SAAU,UAkBvF,OAAIpB,EAEA,yBAAKqB,UAAU,oBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKrD,IAAG,UAAKsD,GAAL,kBAA6CC,IAAI,eAE3D,yBAAKF,UAAU,kBACb,kBAAC1B,EAAD,CAAO6B,MAAO,EAAGC,MAAO,CAACC,WAAY,SAArC,sBAKJ,6BACA,uBAAKL,UAAU,eACb,uBAAKM,KAAM,GAAIN,UAAU,QACvB,2BACE,uBAAKM,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,sBACA,uBAAGH,MAAO,CAACG,QAAS,WAAY5B,EAAUnH,kBAG9C,2BACE,uBAAK8I,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,uBACA,uBAAGH,MAAO,CAACG,QAAS,WACjBC,IAAO7B,EAAUlH,eAAegJ,OAAO,iBAI9C,2BACE,uBAAKH,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,oBACA,uBAAGH,MAAO,CAACG,QAAS,WACjBC,IAAO7B,EAAUlH,eAAegJ,OAAO,iBAI9C,2BACE,uBAAKH,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,8BAGJ,2BACE,uBAAKD,KAAM,IACT,uBAAGF,MAAO,CAACG,QAAS,SAAUF,WAAY,SAA1C,gBAEG1B,EAAUtI,MAAMiJ,KAAI,SAACzF,EAAM6G,GAC1B,GAAI7G,EAAK2F,iBAAmB,EAE1B,MAAM,GAAN,OAAU3F,EAAK4F,IAAItN,SAASgN,MAAM,GAAlC,aAOZ,uBACEmB,KAAM,EACNN,UAAU,QACVI,MAAO,CACLO,WAAY,iCAEd,6DACmC,6BADnC,sCAC8E,6BAD9E,sCAMJ,yBAAKX,UAAU,oBACb,2BACE,uBAAKM,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,qBAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAC9BjC,EAAUjH,oBAAoBpE,QAIrC,uBAAKgN,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,uBAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAC9BjC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAciL,gBAK/C,2BACE,uBAAKP,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,wBAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAAjC,UACMjC,EAAUjH,oBAAoBzC,QADpC,aACgD0J,EAAUjH,oBAAoBlE,KAD9E,aACuFmL,EAAUjH,oBAAoBhE,MADrH,aAC+HiL,EAAUjH,oBAAoBjE,YAIjK,uBAAK6M,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,0BAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAAjC,UACMjC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAckL,wBAD5C,aACwEnC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAcmL,qBAD9G,aACuIpC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAcoL,sBAD7K,aACuMrC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAcqL,6BAKnP,2BACE,uBAAKX,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,WAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAC9BjC,EAAUjH,oBAAoB1D,OAIrC,uBAAKsM,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,SAAvB,WAEF,uBAAKC,KAAM,GAAIF,MAAO,CAACQ,SAAU,eAC9BjC,EAAUtI,MAAM,GAAGwD,KAAKjE,cAAcsL,gBAMjD,uBAAKlB,UAAU,gBACb,kBAAC,IAAD,CAAOmB,UAAQ,EAACC,KAAK,MACnB,+BACE,4BACE,sCACA,wCACA,wCACA,uCACA,4CACA,4CACA,6CAGJ,+BACGzC,EAAUtI,MAAMiJ,KAAI,SAACzF,GACpB,OAAIA,EAAK2F,iBAAmB,EAExB,4BACE,4BAAK3F,EAAK4F,IAAItN,UACd,4BAAK0H,EAAK4F,IAAIrN,UACd,4BAAKyH,EAAK2F,kBACV,4BACG3F,EAAK4F,IAAI/M,SAAS4M,KAAI,SAACI,GAAD,OACrB,yBAAKU,MAAO,CAACG,QAAS,OAAQc,cAAe,WAC3C,2BAAI3B,EAAKE,QAAQ0B,eAIvB,4BACGzH,EAAK4F,IAAI/M,SAAS4M,KAAI,SAACI,GAAD,OACrB,yBAAKU,MAAO,CAACG,QAAS,OAAQc,cAAe,WAC3C,2BAAI3B,EAAKE,QAAQ2B,iBAIvB,4BACG1H,EAAK4F,IAAI/M,SAAS4M,KAAI,SAACI,GAAD,OACrB,yBAAKU,MAAO,CAACG,QAAS,OAAQc,cAAe,WAC3C,2BAAI3B,EAAKE,QAAQtM,WAIvB,4BACGuG,EAAK4F,IAAI/M,SAAS4M,KAAI,SAACI,GAAD,OACrB,yBAAKU,MAAO,CAACG,QAAS,OAAQc,cAAe,WAC3C,2BAAI3B,EAAKC,SAAW9F,EAAK2F,wBAO5B,WAMjB,uBAAKQ,UAAU,gBACb,uBAAKM,KAAM,IACT,2BACE,uBAAKA,KAAM,GACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,uBAEF,uBAAKD,KAAM,IACT,uBAAGF,MAAO,CAACG,QAAS,SAAUK,SAAU,aAAcY,cAAe,eAArE,UACMC,OAAOC,aAAa,MAD1B,YA1Nd,SAAiBC,GACf,IAAKA,EAAMA,EAAI/P,YAAYsN,OAAS,EAAG,MAAO,WAC9C,IAAM0C,EAAI,mBAAYD,GAAM9P,QAAQ,GAAG4M,MAAM,yCAC7C,GAAKmD,EAAL,CACA,IAAIC,EAAM,GASV,OARAA,GAAe,GAARD,EAAE,GAAF,UAAetT,EAAEwT,OAAOF,EAAE,MAAX,UAAsB7B,EAAE6B,EAAE,GAAG,IAA7B,YAAoCtT,EAAEsT,EAAE,GAAG,KAA1D,UAA0E,GACjFC,GAAe,GAARD,EAAE,GAAF,UAAetT,EAAEwT,OAAOF,EAAE,MAAX,UAAsB7B,EAAE6B,EAAE,GAAG,IAA7B,YAAoCtT,EAAEsT,EAAE,GAAG,KAA1D,SAAyE,GAChFC,GAAe,GAARD,EAAE,GAAF,UAAetT,EAAEwT,OAAOF,EAAE,MAAX,UAAsB7B,EAAE6B,EAAE,GAAG,IAA7B,YAAoCtT,EAAEsT,EAAE,GAAG,KAA1D,aAA6E,GACpFC,GAAe,GAARD,EAAE,GAAF,UAAetT,EAAEwT,OAAOF,EAAE,MAAX,UAAsB7B,EAAE6B,EAAE,GAAG,IAA7B,YAAoCtT,EAAEsT,EAAE,GAAG,KAA1D,YAA4E,GACnFC,GACU,GAARD,EAAE,GAAF,WACe,IAAPC,EAAY,OAAS,KAAOvT,EAAEwT,OAAOF,EAAE,MAAX,UAAsB7B,EAAE6B,EAAE,GAAG,IAA7B,YAAoCtT,EAAEsT,EAAE,GAAG,MAD/E,SAEI,IA+M2CG,CAAQlD,MAG/C,8BAEF,2BACE,uBAAKyB,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,aACA,uBAAGH,MAAO,CAACG,QAAS,WAAY5B,EAAUhH,YAAY3F,MAG1D,2BACE,uBAAKsO,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,uBACA,uBAAGH,MAAO,CAACG,QAAS,SAAUK,SAAU,eACrCjC,EAAUvG,aAAa9E,QAI9B,2BACE,uBAAKgN,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,kBACA,uBAAGH,MAAO,CAACG,QAAS,SAAUK,SAAU,eAAgBjC,EAAU7G,eAGtE,2BACE,uBAAKwI,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,iBACA,uBAAGH,MAAO,CAACG,QAAS,SAAUK,SAAU,eAAgBjC,EAAU5G,kBAKxE,uBAAKuI,KAAM,IACT,2BACE,uBAAKA,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,kBACA,uBAAGH,MAAO,CAACC,WAAY,OAAQE,QAAS,SAAUK,SAAU,eAA5D,UACMa,OAAOC,aAAa,MAD1B,YACqC7C,MAgBzC,2BACE,uBAAKyB,KAAM,IACT,uBAAGF,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,kBACA,uBAAGH,MAAO,CAACG,QAAS,SAAUK,SAAU,eACrCjC,EAAU1G,oBAMrB,6BACA,2BAAOmI,MAAO,CAAC4B,gBAAiB,UAC9B,yBAAKhC,UAAU,eACb,uBAAGI,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,kBACA,uBAAGH,MAAO,CAACG,QAAS,WAApB,2EAC2E,IAD3E,8JAKA,6BACA,uBAAGH,MAAO,CAACC,WAAY,OAAQE,QAAS,WAAxC,WACA,uBAAGH,MAAO,CAACG,QAAS,WACjB,IADH,4IAQJ,6BACA,2BAAOH,MAAO,CAAC4B,gBAAiB,QAASC,MAAO,SAC9C,yBAAKjC,UAAU,UACb,2BACE,uBAAKM,KAAM,IACX,uBAAKA,KAAM,GAAIF,MAAO,CAACC,WAAY,SAAnC,0BAGA,uBAAKC,KAAM,IACX,uBAAKA,KAAM,EAAGF,MAAO,CAACC,WAAY,SAAlC,6BAIF,6BAXF,IAWS,6BACP,6BACA,2BACE,uBAAKC,KAAM,IACX,uBAAKA,KAAM,GAAIF,MAAO,CAACC,WAAY,SAAnC,wBAGA,uBAAKC,KAAM,IACX,uBAAKA,KAAM,EAAGF,MAAO,CAACC,WAAY,SAAlC,yBAIF,2BACE,uBAAKC,KAAM,IACX,uBAAKA,KAAM,IAAX,8BACA,uBAAKA,KAAM,IACX,uBAAKA,KAAM,GAAX,+BAEF,6BA7BF,IA6BS,6BACP,yBACEF,MAAO,CACLG,QAAS,OACT2B,eAAgB,SAChBC,WAAY,SACZd,cAAe,SACfe,QAAS,IACTC,OAAQ,MAEV,uBAAGjC,MAAO,CAACkC,SAAU,OAAQC,MAAO,YAApC,kBACA,qDAML,uBAAMC,UAAQ,EAACpC,MAAO,CAACqC,SAAU,WAAYC,WAAY,OAAQC,UAAW","file":"static/js/11.e8e1eebb.chunk.js","sourcesContent":["import * as jwtDecode from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\r\nimport { DEFAULT_BASE_URL } from '../constants/enviroment';\r\n\r\nimport { getStorage } from './shared';\r\n\r\naxios.defaults.baseURL = DEFAULT_BASE_URL;\r\n\r\nconst getAccessToken = async () => {\r\n  const storage = getStorage();\r\n\r\n  const accessToken = await storage.get(ACCESS_TOKEN, null);\r\n  const refreshToken = await storage.get(REFRESH_TOKEN, null);\r\n  if (!(accessToken && refreshToken)) throw Error('No user found');\r\n\r\n  const accessPayload = jwtDecode(accessToken);\r\n  if (new Date(parseInt(accessPayload.exp, 10) * 1000) > new Date()) return accessToken;\r\n\r\n  const {\r\n    data: { access: newAccessToken },\r\n  } = await axios.post('/api/token/refresh/', {\r\n    refresh: refreshToken,\r\n  });\r\n\r\n  await storage.set(ACCESS_TOKEN, newAccessToken);\r\n\r\n  return newAccessToken;\r\n};\r\n\r\nexport const loadAPI = async (url, opts = {}) => {\r\n  const {\r\n    onSuccess = (data) => data,\r\n    onFailure = (error) => error,\r\n    secure = true,\r\n    defaultData,\r\n    headers,\r\n    ...options\r\n  } = opts;\r\n\r\n  try {\r\n    const res = await axios(url, {\r\n      headers: {\r\n        ...(secure ? { Authorization: `Bearer ${await getAccessToken()}` } : {}),\r\n        ...headers,\r\n      },\r\n      ...options,\r\n    });\r\n\r\n    const { data, status } = res;\r\n    await onSuccess(data);\r\n    return { data, status, error: undefined, loading: false };\r\n  } catch (error) {\r\n    if (error.response) {\r\n      const { data, status } = error.response;\r\n      await onFailure(data);\r\n      return { data: undefined, status, error: data, loading: false };\r\n    }\r\n\r\n    if (error.request) {\r\n      const e = { message: 'error in request setup' };\r\n      // noinspection JSCheckFunctionSignatures\r\n      return { data: undefined, status: 0, error: e, loading: false };\r\n    }\r\n\r\n    throw Error(error);\r\n  }\r\n};\r\n","// export const DEFAULT_BASE_URL = 'https://packsdev.ap-south-1.elasticbeanstalk.com';\r\nexport const DEFAULT_BASE_URL = 'https://shiganbackend.trakkia.com/';\r\n//export const DEFAULT_BASE_URL = 'https://9c8d2120fd8a.ngrok.io';\r\n","import {loadAPI} from '../helpers/api';\r\n\r\nexport const getJWTTokens = ({username, password}) =>\r\n  loadAPI(`/api/token/`, {\r\n    method: 'POST',\r\n    data: {username, password},\r\n    secure: false,\r\n  });\r\n\r\nexport const isUserVerified = ({username}) =>\r\n  loadAPI(`/verification/`, {\r\n    params: {username},\r\n    secure: false,\r\n  });\r\n\r\nexport const verifyUser = ({username, otp}) =>\r\n  loadAPI('/verifyOTP/', {\r\n    method: 'POST',\r\n    data: {username, otp},\r\n    secure: false,\r\n  });\r\n\r\nexport const getUserMeta = () => loadAPI(`/user/meta/`);\r\n\r\nexport const createEmployee = ({username, email, password, first_name, last_name}) =>\r\n  loadAPI('/create-employee/', {\r\n    method: 'POST',\r\n    data: {username, email, password, first_name, last_name},\r\n    secure: false,\r\n  });\r\n\r\nexport const createClient = ({username, email, password, first_name, last_name}) =>\r\n  loadAPI('/create-client/', {\r\n    method: 'POST',\r\n    data: {username, email, password, first_name, last_name},\r\n    secure: false,\r\n  });\r\n\r\nexport const retrieveClients = () =>\r\n  loadAPI('/clients/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createProduct = (req) =>\r\n  loadAPI('/create-product/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveProducts = () =>\r\n  loadAPI('/products/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editProduct = (id, req) => {\r\n  return loadAPI(`/edit-product/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data: req,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const retrieveProduct = (id) =>\r\n  loadAPI(`/edit-product/${id}`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteProduct = (id) =>\r\n  loadAPI(`/edit-product/${id}`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createKit = ({\r\n  kit_name,\r\n  kit_info,\r\n  components_per_kit,\r\n  kit_client,\r\n  part_name,\r\n  part_number,\r\n  kit_type,\r\n  products,\r\n  active,\r\n}) =>\r\n  loadAPI('/create-kit/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data: {\r\n      kit_name,\r\n      kit_info,\r\n      components_per_kit,\r\n      kit_client,\r\n      part_name,\r\n      part_number,\r\n      kit_type,\r\n      products,\r\n      active,\r\n    },\r\n  });\r\n\r\nexport const editKit = (\r\n  id,\r\n  {\r\n    kit_name,\r\n    kit_info,\r\n    components_per_kit,\r\n    kit_client,\r\n    part_name,\r\n    part_number,\r\n    kit_type,\r\n    products,\r\n    active,\r\n  },\r\n) =>\r\n  loadAPI(`/edit-kit/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data: {\r\n      kit_name,\r\n      kit_info,\r\n      components_per_kit,\r\n      kit_client,\r\n      part_name,\r\n      part_number,\r\n      kit_type,\r\n      products,\r\n      active,\r\n    },\r\n  });\r\n\r\nexport const retrieveKits = () =>\r\n  loadAPI('/kits/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveKitsClients = () =>\r\n  loadAPI('/client-kits/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveKit = (id) =>\r\n  loadAPI(`/edit-kit/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteKit = (id) =>\r\n  loadAPI(`/edit-kit/${id}`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createOutward = (data) =>\r\n  loadAPI('create-outward/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const editOutward = (id, data) =>\r\n  loadAPI(`edit-outward/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const deleteOutward = (id) =>\r\n  loadAPI(`edit-outward/${id}/`, {\r\n    method: 'Delete',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveOutward = (id) =>\r\n  loadAPI(`edit-outward/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\nexport const retrieveOutwardDocket = (id) =>\r\n  loadAPI(`outwards/?id=${id}`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveOutwardDocketEmp = (id) =>\r\n  loadAPI(`emp-outwards/?id=${id}`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createVendor = ({\r\n  name,\r\n  street,\r\n  city,\r\n  pincode,\r\n  state,\r\n  contact_person_name,\r\n  contact_person_no,\r\n  email,\r\n  type,\r\n  payment_terms,\r\n  pan,\r\n  gst,\r\n  code,\r\n  remarks,\r\n  beneficiary_name,\r\n  account_no,\r\n  bank_name,\r\n  ifsc,\r\n  active,\r\n}) =>\r\n  loadAPI('/create-vendor/', {\r\n    method: 'POST',\r\n    data: {\r\n      name,\r\n      street,\r\n      city,\r\n      pincode,\r\n      state,\r\n      contact_person_name,\r\n      contact_person_no,\r\n      email,\r\n      type,\r\n      payment_terms,\r\n      pan,\r\n      gst,\r\n      code,\r\n      remarks,\r\n      beneficiary_name,\r\n      account_no,\r\n      bank_name,\r\n      ifsc,\r\n      active,\r\n    },\r\n    secure: true,\r\n  });\r\n\r\nexport const editVendor = (\r\n  id,\r\n  {\r\n    name,\r\n    street,\r\n    city,\r\n    pincode,\r\n    state,\r\n    contact_person_name,\r\n    contact_person_no,\r\n    email,\r\n    type,\r\n    payment_terms,\r\n    pan,\r\n    gst,\r\n    code,\r\n    remarks,\r\n    beneficiary_name,\r\n    account_no,\r\n    bank_name,\r\n    ifsc,\r\n    active,\r\n  },\r\n) =>\r\n  loadAPI(`/edit-vendor/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {\r\n      name,\r\n      street,\r\n      city,\r\n      pincode,\r\n      state,\r\n      contact_person_name,\r\n      contact_person_no,\r\n      email,\r\n      type,\r\n      payment_terms,\r\n      pan,\r\n      gst,\r\n      code,\r\n      remarks,\r\n      beneficiary_name,\r\n      account_no,\r\n      bank_name,\r\n      ifsc,\r\n      active,\r\n    },\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteVendor = (id) =>\r\n  loadAPI(`/edit-vendor/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveVendor = (id) =>\r\n  loadAPI(`/edit-vendor/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveVendors = () =>\r\n  loadAPI(`/vendors/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createWarehouse = (req) =>\r\n  loadAPI('/create-warehouse/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data: req,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const editWarehouse = (id, req) =>\r\n  loadAPI(`/edit-warehouse/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data: req,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const deleteWarehouse = (id) =>\r\n  loadAPI(`/edit-warehouse/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveWarehouse = (id) =>\r\n  loadAPI(`/edit-warehouse/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveWarehouses = () =>\r\n  loadAPI('/warehouse/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editClientProfile = (id, req) =>\r\n  loadAPI(`/client-profile/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data: req,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveClientProfile = (id) =>\r\n  loadAPI(`/client-profile/${id}`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createReceiverClient = ({name, city, address, emitter, pan, gst, active}) =>\r\n  loadAPI('/create-receiverclient/', {\r\n    method: 'POST',\r\n    data: {name, city, address, emitter, pan, gst, active},\r\n    secure: true,\r\n  });\r\n\r\nexport const editReceiverClient = (id, {name, city, address, emitter, pan, gst, active}) =>\r\n  // loadAPI(`/edit-receiverclient/${id}/`, {\r\n  loadAPI(`/edit-receiverclient/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {name, city, address, emitter, pan, gst, active},\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteReceiverClient = (id) =>\r\n  loadAPI(`/edit-receiverclient/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveReceiverClient = (id) =>\r\n  loadAPI(`/edit-receiverclient/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retieveReceiverClients = (id) =>\r\n  loadAPI(`/receiverclients/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retieveReceiverClientsClientSide = () =>\r\n  loadAPI(`/client-reciever-client/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createFlow = ({\r\n  flow_name,\r\n  flow_info,\r\n  flow_type,\r\n  flow_days,\r\n  sender_client,\r\n  receiver_client,\r\n  kits,\r\n  active,\r\n}) =>\r\n  loadAPI('/create-flow/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data: {\r\n      flow_name,\r\n      flow_info,\r\n      flow_type,\r\n      flow_days,\r\n      sender_client,\r\n      receiver_client,\r\n      kits,\r\n      active,\r\n    },\r\n  });\r\n\r\nexport const editFlow = (\r\n  id,\r\n  {flow_name, flow_info, flow_type, flow_days, sender_client, receiver_client, kits, active},\r\n) =>\r\n  loadAPI(`/edit-flow/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data: {\r\n      flow_name,\r\n      flow_info,\r\n      flow_type,\r\n      flow_days,\r\n      sender_client,\r\n      receiver_client,\r\n      kits,\r\n      active,\r\n    },\r\n  });\r\n\r\nexport const retreiveFlow = (id) =>\r\n  loadAPI(`/edit-flow/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retreiveFlows = () =>\r\n  loadAPI(`/flows/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retreiveFlowsClient = () =>\r\n  loadAPI(`/client-flows/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retreiveMyFlows = () =>\r\n  loadAPI('/myflows/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteFlow = (id) =>\r\n  loadAPI(`/edit-flow/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createMr = ({delivery_required_on, flows, client_id}) =>\r\n  loadAPI('/create-mrequets/', {\r\n    method: 'POST',\r\n    data: {delivery_required_on, flows, client_id},\r\n    secure: true,\r\n  });\r\n\r\nexport const editMr = (id, {delivery_required_on, flows}) =>\r\n  loadAPI(`/edit-mrequets/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {delivery_required_on, flows},\r\n    secure: true,\r\n  });\r\n\r\nexport const editAddMr = (id, {delivery_required_on, flows, client_id}) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {delivery_required_on, flows, client_id},\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveMr = (id) =>\r\n  loadAPI(`/edit-mrequets/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAddMr = (id) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveMrs = () =>\r\n  loadAPI('/mrequets/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteMr = (id) =>\r\n  loadAPI(`/edit-mrequets/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteAddMr = (id) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createDm = ({delivery_month, demand_flows, client_id}) =>\r\n  loadAPI('/create-demand/', {\r\n    method: 'POST',\r\n    data: {delivery_month, demand_flows, client_id},\r\n    secure: true,\r\n  });\r\n\r\nexport const editDm = (id, {delivery_month, demand_flows}) =>\r\n  loadAPI(`/edit-demand/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {delivery_month, demand_flows},\r\n    secure: true,\r\n  });\r\n\r\nexport const editAddDm = (id, {delivery_required_on, flows, client_id}) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {delivery_required_on, flows, client_id},\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveDm = (id) =>\r\n  loadAPI(`/edit-demand/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAddDm = (id) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveDms = () =>\r\n  loadAPI('/demands/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveDmsClient = () =>\r\n  loadAPI('/client-demands/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteDm = (id) =>\r\n  loadAPI(`/edit-demand/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteAddDm = (id) =>\r\n  loadAPI(`/admin-mredit/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveEmployeeMrs = () =>\r\n  loadAPI('/allmrequest/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveEmployeeMrsEfficient = () =>\r\n  loadAPI('/allmrequest-table/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createAllotment = ({\r\n  transaction_no,\r\n  dispatch_date,\r\n  send_from_warehouse,\r\n  sales_order,\r\n  flows,\r\n  is_delivered,\r\n  model,\r\n  driver_name,\r\n  driver_number,\r\n  lr_number,\r\n  vehicle_number,\r\n  freight_charges,\r\n  vehicle_type,\r\n  transport_by,\r\n  expected_delivery,\r\n  remarks,\r\n}) =>\r\n  loadAPI('/create-allotment/', {\r\n    method: 'POST',\r\n    data: {\r\n      transaction_no,\r\n      dispatch_date,\r\n      send_from_warehouse,\r\n      sales_order,\r\n      flows,\r\n      is_delivered,\r\n      model,\r\n      driver_name,\r\n      driver_number,\r\n      lr_number,\r\n      vehicle_number,\r\n      freight_charges,\r\n      vehicle_type,\r\n      transport_by,\r\n      expected_delivery,\r\n      remarks,\r\n    },\r\n    secure: 'true',\r\n  });\r\n\r\nexport const editAllotment = (\r\n  id,\r\n  {\r\n    dispatch_date,\r\n    send_from_warehouse,\r\n    sales_order,\r\n    flows,\r\n    model,\r\n    driver_name,\r\n    driver_number,\r\n    lr_number,\r\n    vehicle_number,\r\n    freight_charges,\r\n    vehicle_type,\r\n    transport_by,\r\n    expected_delivery,\r\n    remarks,\r\n  },\r\n) =>\r\n  loadAPI(`/edit-allotment/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {\r\n      dispatch_date,\r\n      send_from_warehouse,\r\n      sales_order,\r\n      flows,\r\n      model,\r\n      driver_name,\r\n      driver_number,\r\n      lr_number,\r\n      vehicle_number,\r\n      freight_charges,\r\n      vehicle_type,\r\n      transport_by,\r\n      expected_delivery,\r\n      remarks,\r\n    },\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAllotment = (id) =>\r\n  loadAPI(`/edit-allotment/${id}/`, {\r\n    methood: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAllotments = (id) =>\r\n  loadAPI('/allotments/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {id},\r\n  });\r\n\r\nexport const retrieveAllotmentsCalender = (tno) =>\r\n  loadAPI(`/allotments-cal/?tno=${tno}`, {\r\n    method: 'GET',\r\n    secure: false,\r\n  });\r\n\r\nexport const deleteAllotment = (id) =>\r\n  loadAPI(`/edit-allotment/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createGRN = (data) =>\r\n  loadAPI('/create-grn/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n    // headers: {\r\n    //   'Content-Type': 'multipart/form-data  boundary=' + Math.random().toString().substr(2),\r\n    // },\r\n  });\r\n\r\nexport const editGRN = (id, data) =>\r\n  loadAPI(`/edit-grn/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data,\r\n    // headers: {\r\n    //   'Content-Type': 'multipart/form-data  boundary=' + Math.random().toString().substr(2),\r\n    // },\r\n  });\r\n\r\nexport const retrieveGRN = (id) =>\r\n  loadAPI(`/edit-grn/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveGRNs = () =>\r\n  loadAPI('/grns/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteGRN = (id) =>\r\n  loadAPI(`/edit-grn/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createDelivered = (req) =>\r\n  loadAPI('/create-delivered/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\nexport const editDelivered = (id, req) =>\r\n  loadAPI(`/e-delivered/${id}/`, {\r\n    method: 'PATCH',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveDelivered = (id) =>\r\n  loadAPI(`/edit-delivered/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createOutwardDeliveredDocket = (req) =>\r\n  loadAPI('/create-inward/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\nexport const editOutwardDeliveredDocket = (id, req) =>\r\n  loadAPI(`/e-inward/${id}/`, {\r\n    method: 'PATCH',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveOutwardDeliveredDocket = (id) =>\r\n  loadAPI(`/edit-inward/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteOutwardDeliveredDocket = (id) =>\r\n  loadAPI(`/edit-inward/${id}/`, {\r\n    method: 'Delete',\r\n    secure: true,\r\n  });\r\n\r\nexport const leadFileUpload = (req) =>\r\n  loadAPI('/upload-pfep/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const tpFileUpload = (req) =>\r\n  loadAPI('/upload-tp/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const tpFileReUpload = (id, req) =>\r\n  loadAPI(`/reupload-tp/${id}/`, {\r\n    method: 'PATCH',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const createReturn = (data) =>\r\n  loadAPI('/create-return/', {\r\n    method: 'POST',\r\n    data,\r\n    secure: 'true',\r\n  });\r\n\r\nexport const editReturn = (\r\n  id,\r\n  {\r\n    transaction_no,\r\n    transaction_date,\r\n    transaction_type,\r\n    flow,\r\n    kits,\r\n    driver_name,\r\n    driver_number,\r\n    lr_number,\r\n    vehicle_number,\r\n    freight_charges,\r\n    vehicle_type,\r\n    transport_by,\r\n    warehouse,\r\n    receiver_client,\r\n    remarks,\r\n  },\r\n) =>\r\n  loadAPI(`/edit-return/${id}/`, {\r\n    method: 'PATCH',\r\n    data: {\r\n      transaction_no,\r\n      transaction_date,\r\n      transaction_type,\r\n      flow,\r\n      kits,\r\n      driver_name,\r\n      driver_number,\r\n      lr_number,\r\n      vehicle_number,\r\n      freight_charges,\r\n      vehicle_type,\r\n      transport_by,\r\n      warehouse,\r\n      receiver_client,\r\n      remarks,\r\n    },\r\n    secure: 'true',\r\n  });\r\n\r\nexport const retrieveReturn = (id) =>\r\n  loadAPI(`/edit-return/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n//\r\n// export const retrieveReturns = () =>\r\n//   loadAPI('/return-table/', {\r\n//     method: 'GET',\r\n//     secure: true,\r\n//   });\r\n\r\nexport const retrieveReturns = (id) =>\r\n  loadAPI('/return-received/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {id},\r\n  });\r\n//\r\n// export const retrieveReturns = () =>\r\n//   loadAPI('/return-table/', {\r\n//     method: 'GET',\r\n//     secure: true,\r\n//   });\r\n\r\nexport const deleteReturn = (id) =>\r\n  loadAPI(`/edit-return/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveRFlows = () =>\r\n  loadAPI('/r-flows/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createReceived = (req) =>\r\n  loadAPI('/create-received/', {\r\n    method: 'POST',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const editReceived = (id, req) =>\r\n  // loadAPI(`/edit-received/${id}/`, {\r\n  loadAPI(`/e-received/${id}/`, {\r\n    method: 'PATCH',\r\n    data: req,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveReceived = (id) =>\r\n  loadAPI(`/edit-received/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteReceived = (id) =>\r\n  loadAPI(`/edit-received/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const allDelivered = () =>\r\n  loadAPI('/delivered/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const allInward = () =>\r\n  loadAPI('/inward/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const allReceived = () => loadAPI('/received/', {});\r\n\r\nexport const retrieveGRNBars = (id) =>\r\n  loadAPI(`/grn-barcodes/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveGRNBarCodes = (id) =>\r\n  loadAPI(`/print-barcodes/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAllotmentReport = ({cname, to, from}) =>\r\n  loadAPI(`/allotment-reports/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {\r\n      cname,\r\n      to,\r\n      from,\r\n    },\r\n  });\r\n\r\nexport const retrieveStockingReport = ({to, from, cname}) =>\r\n  loadAPI(`/floating-report/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {\r\n      to,\r\n      from,\r\n      cname,\r\n    },\r\n  });\r\n\r\nexport const retrieveReturnReport = ({cname, to, from}) =>\r\n  loadAPI(`/return-reports/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {\r\n      cname,\r\n      to,\r\n      from,\r\n    },\r\n  });\r\n\r\nexport const retrieveAllotmentsDelivered = (id) =>\r\n  loadAPI('/allotments-delivered/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {id},\r\n  });\r\n\r\nexport const retrieveDocketOutwardInward = (id) =>\r\n  loadAPI('/outward-inward/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {id},\r\n  });\r\n\r\nexport const retrieveReturnDocket = (id) =>\r\n  loadAPI('/return-docket/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    params: {\r\n      id,\r\n    },\r\n  });\r\n\r\nexport const retrieveReturnDocketCaleder = (id) =>\r\n  loadAPI(`/returns-cal/?tno=${id}`, {\r\n    method: 'GET',\r\n    secure: false,\r\n  });\r\n\r\nexport const createLead = (data) =>\r\n  loadAPI('/create-leads/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const retrieveLeads = () =>\r\n  loadAPI('/leads/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveCP = () =>\r\n  loadAPI('/cp/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrievePFEP = () =>\r\n  loadAPI('/pfep/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editLead = (id, data) =>\r\n  loadAPI(`/edit-leads/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const retrieveLead = (id) =>\r\n  loadAPI(`/edit-leads/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteLead = (id) =>\r\n  loadAPI(`/edit-leads/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const postAltBarcodes = (data) => {\r\n  return loadAPI('dispatch-allotment/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const postReturnBarcodes = (data) => {\r\n  return loadAPI('dispatch-return/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\nexport const createPFEP = (data) => {\r\n  return loadAPI('create-pfep/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const deletePFEP = (id) =>\r\n  loadAPI(`/edit-pfep/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const editPFEP = (id, data) =>\r\n  loadAPI(`/edit-pfep/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const createCP = (data) => {\r\n  return loadAPI('create-cp/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const deleteCP = (id) =>\r\n  loadAPI(`/edit-cp/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const editCP = (id, data) =>\r\n  loadAPI(`/edit-cp/${id}/`, {\r\n    method: 'PATCH',\r\n    secure: true,\r\n    data,\r\n  });\r\n\r\nexport const retrieveTestInv = (data) => {\r\n  return loadAPI('inv-items/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const createTestInv = (data) => {\r\n  return loadAPI('create-inv/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const deleteTestInv = (id) =>\r\n  loadAPI(`/edit-inv/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveSC2TestInvClientSide = (rp) => {\r\n  return loadAPI(`sc-inv-items/?id=${rp.id}`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n};\r\n\r\nexport const retrieveSC2TestInv = (data) => {\r\n  return loadAPI('sc-inv-items/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const createSC2TestInv = (data) => {\r\n  return loadAPI('create-sc-inv/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const deleteSC2TestInv = (id) =>\r\n  loadAPI(`/edit-sc-inv/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveRC2TestInv = (data) => {\r\n  return loadAPI('rc-inv-items/', {\r\n    method: 'GET',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const createRC2TestInv = (data) => {\r\n  return loadAPI('create-rc-inv/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const deleteRC2TestInv = (id) =>\r\n  loadAPI(`/edit-rc-inv/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const createMRStatus = (data) => {\r\n  return loadAPI('create-mrstatus/', {\r\n    method: 'POST',\r\n    secure: true,\r\n    data,\r\n  });\r\n};\r\n\r\nexport const createExpense = (src) =>\r\n  loadAPI('/create-expense/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveExpenses = () =>\r\n  loadAPI('/expenses/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteExpense = (id) =>\r\n  loadAPI(`/edit-expense/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveExpense = (id) =>\r\n  loadAPI(`/edit-expense/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editExpense = (id, src) =>\r\n  loadAPI(`/edit-expense/${id}/`, {\r\n    method: 'PATCH',\r\n    data: src,\r\n    secure: true,\r\n  });\r\n\r\nexport const editExpenseTest = (id, src) =>\r\n  loadAPI(`/ed-expense/${id}/`, {\r\n    method: 'PATCH',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const createAdjustment = (src) =>\r\n  loadAPI('/create-adjustments/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveAdjustments = () =>\r\n  loadAPI('/adjustments/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveAdjustmentClients = () =>\r\n  loadAPI('/clientadjust/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const uploadAdjustmentDocument = (src) =>\r\n  loadAPI('/upload-audit/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const createClientAdjustment = (src) =>\r\n  loadAPI('/create-clientadjust/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n  });\r\n\r\nexport const createGroup = (src) =>\r\n  loadAPI('/create-group/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveGroups = () =>\r\n  loadAPI('/group/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteGroup = (id) =>\r\n  loadAPI(`/edit-group/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveGroup = (id) =>\r\n  loadAPI(`/edit-group/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editGroup = (id, src) =>\r\n  loadAPI(`/edit-group/${id}/`, {\r\n    method: 'PATCH',\r\n    data: src,\r\n    secure: true,\r\n  });\r\n\r\nexport const createSCAdjustment = (src) =>\r\n  loadAPI('/create-sc-adjustments/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveSCAdjustments = () =>\r\n  loadAPI('/sc-adjustments/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createRCAdjustment = (src) =>\r\n  loadAPI('/create-rc-adjustments/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    headers: {\r\n      'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    },\r\n  });\r\n\r\nexport const retrieveRCAdjustments = () =>\r\n  loadAPI('/rc-adjustments/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const createRelocation = (src) =>\r\n  loadAPI('/create-relocation/', {\r\n    method: 'POST',\r\n    data: src,\r\n    secure: true,\r\n    // headers: {\r\n    //   'Content-Type': `multipart/form-data  boundary=${Math.random().toString().substr(2)}`,\r\n    // },\r\n  });\r\n\r\nexport const retrieveRelocations = () =>\r\n  loadAPI('/relocations/', {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const deleteRelocation = (id) =>\r\n  loadAPI(`/edit-relocation/${id}/`, {\r\n    method: 'DELETE',\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveRelocation = (id) =>\r\n  loadAPI(`/edit-relocation/${id}/`, {\r\n    method: 'GET',\r\n    secure: true,\r\n  });\r\n\r\nexport const editRelocation = (id, src) =>\r\n  loadAPI(`/edit-relocation/${id}/`, {\r\n    method: 'PATCH',\r\n    data: src,\r\n    secure: true,\r\n  });\r\n\r\nexport const retrieveRelocationDocketData = (tno) =>\r\n  loadAPI(`/relocation-template/?tno=${tno}`, {\r\n    method: 'GET',\r\n    secure: false,\r\n  });\r\n","export const ACCESS_TOKEN = 'ACCESS_TOKEN';\r\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\r\n","export const getStorage = () => (window ? window.storage : global.storage);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Typography, Spin} from 'antd';\r\nimport {Table} from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nimport {retrieveAllotments, retrieveAllotmentsCalender} from 'common/api/auth';\r\n\r\nimport './docket.styles.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Docket = ({location, match}) => {\r\n  const [allotment, setAllotment] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    const fetchAllotment = async () => {\r\n      if (location.state) {\r\n        if (location.state.id) {\r\n          const {data} = await retrieveAllotmentsCalender(location.state.id);\r\n          // const { data } = await retrieveAllotments(location.state.id);\r\n          if (data) setAllotment(data);\r\n        }\r\n      } else {\r\n        const len = location.pathname.length;\r\n        const id = location.pathname.slice(17, len);\r\n        const {data} = await retrieveAllotmentsCalender(id);\r\n        console.log(data, id, 'ye wala');\r\n        if (data) setAllotment(data);\r\n      }\r\n    };\r\n    fetchAllotment();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const calcTotal = () => {\r\n      let tot = 0;\r\n      if (allotment) {\r\n        allotment.flows.map((flow) => {\r\n          const alloted = flow.alloted_quantity;\r\n          flow.kit.products.map((prod) => {\r\n            tot += alloted * prod.quantity * prod.product.priceperunit;\r\n            return null;\r\n          });\r\n          return null;\r\n        });\r\n      }\r\n      setTotal(tot);\r\n    };\r\n    calcTotal();\r\n  }, [allotment]);\r\n\r\n  const a = [\r\n    '',\r\n    'one ',\r\n    'two ',\r\n    'three ',\r\n    'four ',\r\n    'five ',\r\n    'six ',\r\n    'seven ',\r\n    'eight ',\r\n    'nine ',\r\n    'ten ',\r\n    'eleven ',\r\n    'twelve ',\r\n    'thirteen ',\r\n    'fourteen ',\r\n    'fifteen ',\r\n    'sixteen ',\r\n    'seventeen ',\r\n    'eighteen ',\r\n    'nineteen ',\r\n  ];\r\n  const b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n  function inWords(num) {\r\n    if ((num = num.toString()).length > 9) return 'overflow';\r\n    const n = `000000000${num}`.substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n    if (!n) return;\r\n    let str = '';\r\n    str += n[1] != 0 ? `${a[Number(n[1])] || `${b[n[1][0]]} ${a[n[1][1]]}`}crore ` : '';\r\n    str += n[2] != 0 ? `${a[Number(n[2])] || `${b[n[2][0]]} ${a[n[2][1]]}`}lakh ` : '';\r\n    str += n[3] != 0 ? `${a[Number(n[3])] || `${b[n[3][0]]} ${a[n[3][1]]}`}thousand ` : '';\r\n    str += n[4] != 0 ? `${a[Number(n[4])] || `${b[n[4][0]]} ${a[n[4][1]]}`}hundred ` : '';\r\n    str +=\r\n      n[5] != 0\r\n        ? `${(str != '' ? 'and ' : '') + (a[Number(n[5])] || `${b[n[5][0]]} ${a[n[5][1]]}`)}only `\r\n        : '';\r\n    return str;\r\n  }\r\n\r\n  if (allotment)\r\n    return (\r\n      <div className=\"container-docket\">\r\n        <div className=\"header-docket\">\r\n          <div className=\"logo-docket\">\r\n            <img src={`${process.env.PUBLIC_URL}/home-logo.png`} alt=\"Yantraksh\" />\r\n          </div>\r\n          <div className=\"heading-docket\">\r\n            <Title level={2} style={{fontWeight: 'bold'}}>\r\n              DELIVERY CHALLAN\r\n            </Title>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <Row className=\"meta-docket\">\r\n          <Col span={17} className=\"left\">\r\n            <Row>\r\n              <Col span={22}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Transaction No. : </p>\r\n                <p style={{display: 'inline'}}>{allotment.transaction_no}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={22}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Transaction Date : </p>\r\n                <p style={{display: 'inline'}}>\r\n                  {moment(allotment.dispatch_date).format('DD/MM/YYYY')}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={22}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Dispatch Date : </p>\r\n                <p style={{display: 'inline'}}>\r\n                  {moment(allotment.dispatch_date).format('DD/MM/YYYY')}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={22}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Transaction Type : Allot</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={22}>\r\n                <p style={{display: 'inline', fontWeight: 'bold'}}>\r\n                  KIT ID : &nbsp;\r\n                  {allotment.flows.map((flow, idx) => {\r\n                    if (flow.alloted_quantity > 0) {\r\n                      //if (idx===allotment.flows.length-1) return flow.kit.kit_name.slice(3);\r\n                      return `${flow.kit.kit_name.slice(3)}, `;\r\n                    }\r\n                  })}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            span={7}\r\n            className=\"right\"\r\n            style={{\r\n              fontFamily: 'Arial, Helvetica, sans-serif',\r\n            }}>\r\n            <p>\r\n              [ &nbsp;] Original for Consignee <br /> [ &nbsp;] Duplicate for Transporter <br />[\r\n              &nbsp;] Triplicate for Consignor\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"main-data-docket\">\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>Sender's Name : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {allotment.send_from_warehouse.name}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>Receiver's Name : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {allotment.flows[0].flow.sender_client.client_name}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>Sender's Address : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {`${allotment.send_from_warehouse.address}, ${allotment.send_from_warehouse.city}, ${allotment.send_from_warehouse.state}, ${allotment.send_from_warehouse.pincode}`}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>Receiver's Address : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {`${allotment.flows[0].flow.sender_client.client_shipping_address}, ${allotment.flows[0].flow.sender_client.client_shipping_city}, ${allotment.flows[0].flow.sender_client.client_shipping_state}, ${allotment.flows[0].flow.sender_client.client_shipping_pincode}`}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>GST : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {allotment.send_from_warehouse.gst}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={10}>\r\n                  <p style={{fontWeight: 'bold'}}>GST : </p>\r\n                </Col>\r\n                <Col span={12} style={{wordWrap: 'break-word'}}>\r\n                  {allotment.flows[0].flow.sender_client.client_gst}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Row className=\"table-docket\">\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Kit ID</th>\r\n                <th>Kit Name</th>\r\n                <th>Quantity</th>\r\n                <th>HSN/SAC</th>\r\n                <th>Product Code</th>\r\n                <th>Product Name</th>\r\n                <th>Product Qty</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allotment.flows.map((flow) => {\r\n                if (flow.alloted_quantity > 0) {\r\n                  return (\r\n                    <tr>\r\n                      <td>{flow.kit.kit_name}</td>\r\n                      <td>{flow.kit.kit_info}</td>\r\n                      <td>{flow.alloted_quantity}</td>\r\n                      <td>\r\n                        {flow.kit.products.map((prod) => (\r\n                          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <p>{prod.product.hsn_code}</p>\r\n                          </div>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        {flow.kit.products.map((prod) => (\r\n                          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <p>{prod.product.short_code}</p>\r\n                          </div>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        {flow.kit.products.map((prod) => (\r\n                          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <p>{prod.product.name}</p>\r\n                          </div>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        {flow.kit.products.map((prod) => (\r\n                          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <p>{prod.quantity * flow.alloted_quantity}</p>\r\n                          </div>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row className=\"final-docket\">\r\n          <Col span={12}>\r\n            <Row>\r\n              <Col span={7}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Amount in Words : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <p style={{display: 'inline', wordWrap: 'break-word', textTransform: 'capitalize'}}>\r\n                  {`${String.fromCharCode(0x20b9)} ${inWords(total)}`}\r\n                </p>\r\n              </Col>\r\n              <br />\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>SO No. : </p>\r\n                <p style={{display: 'inline'}}>{allotment.sales_order.id}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Transporter Name : </p>\r\n                <p style={{display: 'inline', wordWrap: 'break-word'}}>\r\n                  {allotment.transport_by.name}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Driver Name : </p>\r\n                <p style={{display: 'inline', wordWrap: 'break-word'}}>{allotment.driver_name}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Driver No. : </p>\r\n                <p style={{display: 'inline', wordWrap: 'break-word'}}>{allotment.driver_number}</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col span={12}>\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Grand Total : </p>\r\n                <p style={{fontWeight: 'bold', display: 'inline', wordWrap: 'break-word'}}>\r\n                  {`${String.fromCharCode(0x20b9)} ${total}`}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row> */}\r\n            {/*  <Col span={24}> */}\r\n            {/*    <p style={{ fontWeight: 'bold', display: 'inline' }}>Creation Date : </p> */}\r\n            {/*    <p style={{ display: 'inline', wordWrap: 'break-word' }}> */}\r\n            {/*      {`${new Date().getDate().toString() */}\r\n            {/*      }/${ */}\r\n            {/*        new Date().getMonth().toString() */}\r\n            {/*      }/${ */}\r\n            {/*        new Date().getFullYear().toString()}`} */}\r\n            {/*    </p> */}\r\n            {/*  </Col> */}\r\n            {/* </Row> */}\r\n            <Row>\r\n              <Col span={24}>\r\n                <p style={{fontWeight: 'bold', display: 'inline'}}>Vehicle No. : </p>\r\n                <p style={{display: 'inline', wordWrap: 'break-word'}}>\r\n                  {allotment.vehicle_number}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <table style={{pageBreakInside: 'avoid'}}>\r\n          <div className=\"declaration\">\r\n            <p style={{fontWeight: 'bold', display: 'inline'}}>Declaration : </p>\r\n            <p style={{display: 'inline'}}>\r\n              The packaging products given on hire shall always remain the property of{' '}\r\n              {`<Company Name>`} and shall not be used for the purpose otherwise agreed upon. The\r\n              same shall be returned at the address notified by {`<Company Name>`}.\r\n            </p>\r\n            <br />\r\n            <p style={{fontWeight: 'bold', display: 'inline'}}>Note : </p>\r\n            <p style={{display: 'inline'}}>\r\n              {' '}\r\n              No E-Way Bill is required for Empty Cargo Containers. Refer, Rule 14 of Central Goods\r\n              and Services Tax (Second Amendment) Rules, 2018.\r\n            </p>\r\n          </div>\r\n        </table>\r\n\r\n        <hr />\r\n        <table style={{pageBreakInside: 'avoid', width: '90vw'}}>\r\n          <div className=\"footer\">\r\n            <Row>\r\n              <Col span={1} />\r\n              <Col span={11} style={{fontWeight: 'bold'}}>\r\n                For Sending Location :\r\n              </Col>\r\n              <Col span={6} />\r\n              <Col span={6} style={{fontWeight: 'bold'}}>\r\n                For Receiving Location :\r\n              </Col>\r\n            </Row>\r\n            <br /> <br />\r\n            <br />\r\n            <Row>\r\n              <Col span={1} />\r\n              <Col span={11} style={{fontWeight: 'bold'}}>\r\n                Authorized Signature\r\n              </Col>\r\n              <Col span={6} />\r\n              <Col span={6} style={{fontWeight: 'bold'}}>\r\n                Authorized Signature\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={1} />\r\n              <Col span={11}>(Company Seal & Signature)</Col>\r\n              <Col span={6} />\r\n              <Col span={6}>(Company Seal & Signature)</Col>\r\n            </Row>\r\n            <br /> <br />\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'Center',\r\n                alignItems: 'center',\r\n                flexDirection: 'column',\r\n                padding: '0',\r\n                margin: '0',\r\n              }}>\r\n              <p style={{fontSize: '26px', color: '#034efc'}}>{`<Company Name>`}</p>\r\n              <p>CIN No: ##########</p>\r\n            </div>\r\n          </div>\r\n        </table>\r\n      </div>\r\n    );\r\n  return <Spin spinning style={{position: 'absolute', marginLeft: '49vw', marginTop: '49vh'}} />;\r\n};\r\n\r\nexport default Docket;\r\n"],"sourceRoot":""}