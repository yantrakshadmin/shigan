{"version":3,"sources":["../../common/formFields/PFEP/PFEPStockKeeping.formFields.js","../../common/formFields/PFEP/PFEPCycleTIme.formFields.js","../../common/formFields/PFEP/PFEPTouchPoints.formFields.js","forms/PFEP/PFEPStockKeeping.form.js"],"names":["PREPStockKeepingFormFields","key","type","FORM_ELEMENT_TYPES","INPUT","others","kwargs","placeholder","customLabel","PREPCycleTimeFormFields","PREPTouchPointsFormFields","PFEPStockKeepingForm","id","onCancel","onNext","onDone","active","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","submit","a","ADD_PFEP_DATA","useEffect","STOP_STEP_LOADING","spinning","onFinish","initialValues","layout","autoComplete","orientation","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","List","name","fields","add","remove","field","index","align","noLabel","formOptions","fieldKey","top","onClick","MinusCircleOutlined","Item","temp","getFieldValue","undefined","length","notification","info","message","block","PlusOutlined","justify","htmlType","disabled","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/83.318c3402.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPStockKeepingFormFields = [\r\n  {\r\n    key: 'emitter_inv',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Emitter Inventory',\r\n    },\r\n    customLabel: 'Emitter Inventory',\r\n  },\r\n  {\r\n    key: 'transit_time',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Transit time',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Transit time',\r\n  },\r\n  {\r\n    key: 'wh_emitter',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Warehouse Emitter',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Warehouse Emitter',\r\n  },\r\n  {\r\n    key: 'wh_receiver',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Warehouse Receiver',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Warehouse Receiver',\r\n  },\r\n  {\r\n    key: 'other_storage',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Other Storage',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Other Storage',\r\n  },\r\n  {\r\n    key: 'receiver_inv',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Receiver Inventory',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Receiver Inventory',\r\n  },\r\n]\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPCycleTimeFormFields = [\r\n  {\r\n    key: 'min_cycle_days',\r\n    customLabel: 'Minimum Days',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      type:'number',\r\n      placeholder: 'Minimum Days',\r\n    },\r\n  },{\r\n    key: 'max_cycle_days',\r\n    customLabel: 'Maximum Days',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      type:'number',\r\n      placeholder: 'Maximum Days',\r\n    },\r\n  },{\r\n    key: 'yantra_cycle',\r\n    customLabel: 'Yantra Cycle',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      placeholder: 'Yantra Cycle',\r\n    },\r\n  },\r\n]\r\n","import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\r\n\r\nexport const PREPTouchPointsFormFields = [\r\n  {\r\n    key: 'name',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      placeholder: 'Name',\r\n    },\r\n  },\r\n  {\r\n    key: 'phone',\r\n    kwargs: {\r\n      placeholder: 'Phone',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Phone',\r\n  },\r\n  {\r\n    key: 'email',\r\n    kwargs: {\r\n      placeholder: 'Email',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n  },\r\n  {\r\n    key: 'designation',\r\n    kwargs: {\r\n      placeholder: 'Designation',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n  },\r\n]\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Col, Row, Button, Divider, Spin, notification } from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_PFEP_DATA, STOP_STEP_LOADING } from 'common/actions';\r\nimport { PREPStockKeepingFormFields } from 'common/formFields/PFEP/PFEPStockKeeping.formFields';\r\nimport { ArrowRightOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { PREPCycleTimeFormFields } from 'common/formFields/PFEP/PFEPCycleTIme.formFields';\r\nimport { PREPTouchPointsFormFields } from 'common/formFields/PFEP/PFEPTouchPoints.formFields';\r\n\r\nexport const PFEPStockKeepingForm = ({ id, onCancel,onDone,onNext,active }) => {\r\n  const [loading,setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state =  useSelector(e=>(e.data.pfepData))\r\n\r\n  const submit = async (data) =>{\r\n    setLoading(true)\r\n    await dispatch({ type:ADD_PFEP_DATA,data });\r\n    setLoading(false)\r\n    if(active === 3){\r\n      onNext();\r\n    }\r\n  }\r\n  useEffect( ()=>{\r\n    if(active!==3){\r\n      form.submit()\r\n      dispatch({ type:STOP_STEP_LOADING })\r\n    }\r\n  },[active])\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Form\r\n        onFinish={submit}\r\n        initialValues={state}\r\n        form={form}\r\n        layout='vertical'\r\n        // hideRequiredMark\r\n        autoComplete='off'\r\n      >\r\n        <Divider orientation='left'>Stock Keeping</Divider>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPStockKeepingFormFields.slice(0, 3).map((item, idx) => (\r\n            <Col span={8}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPStockKeepingFormFields.slice(3, 6).map((item, idx) => (\r\n            <Col span={8}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Divider orientation='left'>Cycle Time</Divider>\r\n        <Row style={{ justifyContent: 'left' }}>\r\n          {PREPCycleTimeFormFields.slice(0, 3).map((item, idx) => (\r\n            <Col span={8}>\r\n              <div key={idx.toString()} className='p-2'>\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Divider orientation='left'>Touch Points</Divider>\r\n        <Form.List name='tp'>\r\n          {(fields, { add, remove }) => {\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Row align='middle'>\r\n                    {PREPTouchPointsFormFields.slice(0, 4).map((item) => (\r\n                      <Col span={5}>\r\n                        <div className='p-2'>\r\n                          {formItem({\r\n                            ...item,\r\n                            noLabel: index !== 0,\r\n                            form,\r\n                            others: {\r\n                              formOptions: {\r\n                                ...field,\r\n                                name: [field.name, item.key],\r\n                                fieldKey: [field.fieldKey, item.key],\r\n                              },\r\n                            },\r\n                          })}\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                    <Button\r\n                      type='danger'\r\n                      style={index !== 0 ? { top: '-2vh' } : null}\r\n                      onClick={() => {\r\n                        remove(field.name);\r\n                      }}>\r\n                      <MinusCircleOutlined />\r\n                      {' '}\r\n                      Delete\r\n                    </Button>\r\n                  </Row>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type='dashed'\r\n                    onClick={() => {\r\n                      const temp = form.getFieldValue('tp')\r\n                      if( temp === undefined || temp.length<5){\r\n                        add();\r\n                      }else{\r\n                        notification.info({message:\"Only 5 touch points can be added!\"})\r\n                      }\r\n                    }}\r\n                    block>\r\n                    <PlusOutlined />\r\n                    {' '}\r\n                    Add Item\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n        <Row justify='space-between'>\r\n          <div className='row'>\r\n            <Button type='primary' htmlType='submit' disabled>\r\n              Submit\r\n            </Button>\r\n            <div className='p-2' />\r\n            <Button type='primary' onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type='link' htmlType='submit'>\r\n            <ArrowRightOutlined style={{ fontSize:30 }}  />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPStockKeepingForm;\r\n\r\n"],"sourceRoot":""}